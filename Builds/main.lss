
Builds/main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00001382  00001416  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001382  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080012c  0080012c  00001442  2**0
                  ALLOC
  3 .stab         00000e4c  00000000  00000000  00001444  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001002  00000000  00000000  00002290  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00003292  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000a0  00000000  00000000  000032a8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000003b6  00000000  00000000  00003348  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000064  00000000  00000000  000036fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000001fe  00000000  00000000  00003762  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2128>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e2 e8       	ldi	r30, 0x82	; 130
     17e:	f3 e1       	ldi	r31, 0x13	; 19
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 32       	cpi	r26, 0x2C	; 44
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	ac e2       	ldi	r26, 0x2C	; 44
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a2 33       	cpi	r26, 0x32	; 50
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 c7 02 	call	0x58e	; 0x58e <main>
     1a0:	0c 94 bf 09 	jmp	0x137e	; 0x137e <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <send_uart_char>:
    UCSR0B = (1 << TXEN0);
    UBRR0L = 51;
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
}

void send_uart_char(unsigned char serial_data, FILE *stream) {
     1a8:	cf 93       	push	r28
     1aa:	c8 2f       	mov	r28, r24
    if (serial_data == '\n') { // Send each byte until reached \n character
     1ac:	8a 30       	cpi	r24, 0x0A	; 10
     1ae:	19 f4       	brne	.+6      	; 0x1b6 <send_uart_char+0xe>
        send_uart_char('\r', stream);
     1b0:	8d e0       	ldi	r24, 0x0D	; 13
     1b2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <send_uart_char>
    }
    
    while (!(UCSR0A & (1 << UDRE0)));
     1b6:	80 91 c0 00 	lds	r24, 0x00C0
     1ba:	85 ff       	sbrs	r24, 5
     1bc:	fc cf       	rjmp	.-8      	; 0x1b6 <send_uart_char+0xe>
    UDR0 = serial_data;
     1be:	c0 93 c6 00 	sts	0x00C6, r28
}
     1c2:	cf 91       	pop	r28
     1c4:	08 95       	ret

000001c6 <initialize_transmisson>:
     * SCK  _|  |__|  |__
     *      __       ____
     * DATA   |_____|
     *
     */
    data_out;
     1c6:	83 e0       	ldi	r24, 0x03	; 3
     1c8:	84 b9       	out	0x04, r24	; 4
    data_high;
     1ca:	28 9a       	sbi	0x05, 0	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1cc:	85 e0       	ldi	r24, 0x05	; 5
     1ce:	8a 95       	dec	r24
     1d0:	f1 f7       	brne	.-4      	; 0x1ce <initialize_transmisson+0x8>
     1d2:	00 00       	nop
    _delay_us(2);
    sck_high;
     1d4:	29 9a       	sbi	0x05, 1	; 5
     1d6:	85 e0       	ldi	r24, 0x05	; 5
     1d8:	8a 95       	dec	r24
     1da:	f1 f7       	brne	.-4      	; 0x1d8 <initialize_transmisson+0x12>
     1dc:	00 00       	nop
    _delay_us(2);
    data_low;
     1de:	28 98       	cbi	0x05, 0	; 5
     1e0:	85 e0       	ldi	r24, 0x05	; 5
     1e2:	8a 95       	dec	r24
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <initialize_transmisson+0x1c>
     1e6:	00 00       	nop
    _delay_us(2);
    sck_low;
     1e8:	29 98       	cbi	0x05, 1	; 5
     1ea:	85 e1       	ldi	r24, 0x15	; 21
     1ec:	8a 95       	dec	r24
     1ee:	f1 f7       	brne	.-4      	; 0x1ec <initialize_transmisson+0x26>
     1f0:	00 00       	nop
    _delay_us(8);
    sck_high;
     1f2:	29 9a       	sbi	0x05, 1	; 5
     1f4:	85 e0       	ldi	r24, 0x05	; 5
     1f6:	8a 95       	dec	r24
     1f8:	f1 f7       	brne	.-4      	; 0x1f6 <initialize_transmisson+0x30>
     1fa:	00 00       	nop
    _delay_us(2);
    data_high;
     1fc:	28 9a       	sbi	0x05, 0	; 5
     1fe:	85 e0       	ldi	r24, 0x05	; 5
     200:	8a 95       	dec	r24
     202:	f1 f7       	brne	.-4      	; 0x200 <initialize_transmisson+0x3a>
     204:	00 00       	nop
    _delay_us(2);
    sck_low;
     206:	29 98       	cbi	0x05, 1	; 5
     208:	08 95       	ret

0000020a <send_command>:
     20a:	6a e0       	ldi	r22, 0x0A	; 10
     20c:	6a 95       	dec	r22
     20e:	f1 f7       	brne	.-4      	; 0x20c <send_command+0x2>
     210:	00 c0       	rjmp	.+0      	; 0x212 <send_command+0x8>
}

void send_command(uint8_t command) {
    _delay_us(4);
    data_out;                               // Enable data as output port
     212:	93 e0       	ldi	r25, 0x03	; 3
     214:	94 b9       	out	0x04, r25	; 4
    
    for (int i = 0; i < 8; i++) {
     216:	20 e0       	ldi	r18, 0x00	; 0
     218:	30 e0       	ldi	r19, 0x00	; 0
        if (0x01 & (command >> (7-i))) {
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	47 e0       	ldi	r20, 0x07	; 7
     21e:	50 e0       	ldi	r21, 0x00	; 0
        sck_high;
        _delay_us(4);
        sck_low;
        
        if (i == 7) {
            data_in;
     220:	ee ef       	ldi	r30, 0xFE	; 254
     222:	ba 01       	movw	r22, r20
     224:	62 1b       	sub	r22, r18
     226:	73 0b       	sbc	r23, r19
void send_command(uint8_t command) {
    _delay_us(4);
    data_out;                               // Enable data as output port
    
    for (int i = 0; i < 8; i++) {
        if (0x01 & (command >> (7-i))) {
     228:	dc 01       	movw	r26, r24
     22a:	02 c0       	rjmp	.+4      	; 0x230 <send_command+0x26>
     22c:	b5 95       	asr	r27
     22e:	a7 95       	ror	r26
     230:	6a 95       	dec	r22
     232:	e2 f7       	brpl	.-8      	; 0x22c <send_command+0x22>
     234:	a0 ff       	sbrs	r26, 0
     236:	02 c0       	rjmp	.+4      	; 0x23c <send_command+0x32>
            data_high;
     238:	28 9a       	sbi	0x05, 0	; 5
     23a:	01 c0       	rjmp	.+2      	; 0x23e <send_command+0x34>
        } else {
            data_low;
     23c:	28 98       	cbi	0x05, 0	; 5
     23e:	ba e0       	ldi	r27, 0x0A	; 10
     240:	ba 95       	dec	r27
     242:	f1 f7       	brne	.-4      	; 0x240 <send_command+0x36>
     244:	00 c0       	rjmp	.+0      	; 0x246 <send_command+0x3c>
        }
        
        _delay_us(4);
        sck_high;
     246:	29 9a       	sbi	0x05, 1	; 5
     248:	6a e0       	ldi	r22, 0x0A	; 10
     24a:	6a 95       	dec	r22
     24c:	f1 f7       	brne	.-4      	; 0x24a <send_command+0x40>
     24e:	00 c0       	rjmp	.+0      	; 0x250 <send_command+0x46>
        _delay_us(4);
        sck_low;
     250:	29 98       	cbi	0x05, 1	; 5
        
        if (i == 7) {
     252:	27 30       	cpi	r18, 0x07	; 7
     254:	31 05       	cpc	r19, r1
     256:	81 f0       	breq	.+32     	; 0x278 <send_command+0x6e>

void send_command(uint8_t command) {
    _delay_us(4);
    data_out;                               // Enable data as output port
    
    for (int i = 0; i < 8; i++) {
     258:	2f 5f       	subi	r18, 0xFF	; 255
     25a:	3f 4f       	sbci	r19, 0xFF	; 255
     25c:	28 30       	cpi	r18, 0x08	; 8
     25e:	31 05       	cpc	r19, r1
     260:	01 f7       	brne	.-64     	; 0x222 <send_command+0x18>
     262:	8a e0       	ldi	r24, 0x0A	; 10
     264:	8a 95       	dec	r24
     266:	f1 f7       	brne	.-4      	; 0x264 <send_command+0x5a>
     268:	00 c0       	rjmp	.+0      	; 0x26a <send_command+0x60>
            while ((PINB & (1 << DATA)));   // Wait for data line low
        }
    }
    
    _delay_us(4);
    sck_high;
     26a:	29 9a       	sbi	0x05, 1	; 5
     26c:	9a e0       	ldi	r25, 0x0A	; 10
     26e:	9a 95       	dec	r25
     270:	f1 f7       	brne	.-4      	; 0x26e <send_command+0x64>
     272:	00 c0       	rjmp	.+0      	; 0x274 <send_command+0x6a>
    _delay_us(4);
    sck_low;
     274:	29 98       	cbi	0x05, 1	; 5
     276:	08 95       	ret
        sck_high;
        _delay_us(4);
        sck_low;
        
        if (i == 7) {
            data_in;
     278:	e4 b9       	out	0x04, r30	; 4
            data_high;
     27a:	28 9a       	sbi	0x05, 0	; 5
            while ((PINB & (1 << DATA)));   // Wait for data line low
     27c:	18 99       	sbic	0x03, 0	; 3
     27e:	fe cf       	rjmp	.-4      	; 0x27c <send_command+0x72>
     280:	eb cf       	rjmp	.-42     	; 0x258 <send_command+0x4e>

00000282 <reset>:
    _delay_us(4);
    sck_low;
}

void reset() {
    data_out;
     282:	83 e0       	ldi	r24, 0x03	; 3
     284:	84 b9       	out	0x04, r24	; 4
    data_high;
     286:	28 9a       	sbi	0x05, 0	; 5
     288:	89 e0       	ldi	r24, 0x09	; 9
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	2a e0       	ldi	r18, 0x0A	; 10
     28e:	2a 95       	dec	r18
     290:	f1 f7       	brne	.-4      	; 0x28e <reset+0xc>
     292:	00 c0       	rjmp	.+0      	; 0x294 <reset+0x12>
    
    for (int i = 0; i < 9; i++) {
        _delay_us(4);
        sck_high;
     294:	29 9a       	sbi	0x05, 1	; 5
     296:	2a e0       	ldi	r18, 0x0A	; 10
     298:	2a 95       	dec	r18
     29a:	f1 f7       	brne	.-4      	; 0x298 <reset+0x16>
     29c:	00 c0       	rjmp	.+0      	; 0x29e <reset+0x1c>
        _delay_us(4);
        sck_low;
     29e:	29 98       	cbi	0x05, 1	; 5
     2a0:	01 97       	sbiw	r24, 0x01	; 1

void reset() {
    data_out;
    data_high;
    
    for (int i = 0; i < 9; i++) {
     2a2:	00 97       	sbiw	r24, 0x00	; 0
     2a4:	99 f7       	brne	.-26     	; 0x28c <reset+0xa>
        _delay_us(4);
        sck_high;
        _delay_us(4);
        sck_low;
    }
    initialize_transmisson();
     2a6:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <initialize_transmisson>

000002aa <calculate_measured_data>:
    
    measured = (data_h << 8) | data_l;
    return measured;
}

float calculate_measured_data(uint16_t measured_data, uint8_t value) {
     2aa:	8f 92       	push	r8
     2ac:	9f 92       	push	r9
     2ae:	af 92       	push	r10
     2b0:	bf 92       	push	r11
     2b2:	cf 92       	push	r12
     2b4:	df 92       	push	r13
     2b6:	ef 92       	push	r14
     2b8:	ff 92       	push	r15
    float _humidity, _temperature;
    
    switch (value) {
     2ba:	63 30       	cpi	r22, 0x03	; 3
     2bc:	41 f1       	breq	.+80     	; 0x30e <calculate_measured_data+0x64>
     2be:	65 30       	cpi	r22, 0x05	; 5
     2c0:	c1 f5       	brne	.+112    	; 0x332 <calculate_measured_data+0x88>
        case humidity:
            _humidity = measured_data * 0.0405 - 2.8 * pow(10, -6) * pow(measured_data, 2) - 4;
     2c2:	bc 01       	movw	r22, r24
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	0e 94 05 07 	call	0xe0a	; 0xe0a <__floatunsisf>
     2cc:	6b 01       	movw	r12, r22
     2ce:	7c 01       	movw	r14, r24
     2d0:	24 e5       	ldi	r18, 0x54	; 84
     2d2:	33 ee       	ldi	r19, 0xE3	; 227
     2d4:	45 e2       	ldi	r20, 0x25	; 37
     2d6:	5d e3       	ldi	r21, 0x3D	; 61
     2d8:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     2dc:	4b 01       	movw	r8, r22
     2de:	5c 01       	movw	r10, r24
     2e0:	a7 01       	movw	r20, r14
     2e2:	96 01       	movw	r18, r12
     2e4:	c7 01       	movw	r24, r14
     2e6:	b6 01       	movw	r22, r12
     2e8:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     2ec:	22 ea       	ldi	r18, 0xA2	; 162
     2ee:	37 ee       	ldi	r19, 0xE7	; 231
     2f0:	4b e3       	ldi	r20, 0x3B	; 59
     2f2:	56 e3       	ldi	r21, 0x36	; 54
     2f4:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     2f8:	9b 01       	movw	r18, r22
     2fa:	ac 01       	movw	r20, r24
     2fc:	c5 01       	movw	r24, r10
     2fe:	b4 01       	movw	r22, r8
     300:	0e 94 74 06 	call	0xce8	; 0xce8 <__subsf3>
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e8       	ldi	r20, 0x80	; 128
     30a:	50 e4       	ldi	r21, 0x40	; 64
     30c:	0f c0       	rjmp	.+30     	; 0x32c <calculate_measured_data+0x82>
            return _humidity;
            break;
        case temperature:
            _temperature = -40.00 + 0.01 * measured_data;
     30e:	bc 01       	movw	r22, r24
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 05 07 	call	0xe0a	; 0xe0a <__floatunsisf>
     318:	2a e0       	ldi	r18, 0x0A	; 10
     31a:	37 ed       	ldi	r19, 0xD7	; 215
     31c:	43 e2       	ldi	r20, 0x23	; 35
     31e:	5c e3       	ldi	r21, 0x3C	; 60
     320:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     324:	20 e0       	ldi	r18, 0x00	; 0
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	40 e2       	ldi	r20, 0x20	; 32
     32a:	52 e4       	ldi	r21, 0x42	; 66
     32c:	0e 94 74 06 	call	0xce8	; 0xce8 <__subsf3>
            return _temperature;
     330:	04 c0       	rjmp	.+8      	; 0x33a <calculate_measured_data+0x90>
            break;
    }
    
    return 1;
     332:	60 e0       	ldi	r22, 0x00	; 0
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	80 e8       	ldi	r24, 0x80	; 128
     338:	9f e3       	ldi	r25, 0x3F	; 63
}
     33a:	ff 90       	pop	r15
     33c:	ef 90       	pop	r14
     33e:	df 90       	pop	r13
     340:	cf 90       	pop	r12
     342:	bf 90       	pop	r11
     344:	af 90       	pop	r10
     346:	9f 90       	pop	r9
     348:	8f 90       	pop	r8
     34a:	08 95       	ret

0000034c <serial_init>:
     * Initialize UART,
     * 8 bit frame, 1 Stop Bit
     * No Parity
     *
     */
    UCSR0B = (1 << TXEN0);
     34c:	88 e0       	ldi	r24, 0x08	; 8
     34e:	80 93 c1 00 	sts	0x00C1, r24
    UBRR0L = 51;
     352:	83 e3       	ldi	r24, 0x33	; 51
     354:	80 93 c4 00 	sts	0x00C4, r24
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     358:	86 e0       	ldi	r24, 0x06	; 6
     35a:	80 93 c2 00 	sts	0x00C2, r24
     35e:	08 95       	ret

00000360 <receive_bytes>:
    
    while (!(UCSR0A & (1 << UDRE0)));
    UDR0 = serial_data;
}

void receive_bytes(uint8_t *target) {
     360:	fc 01       	movw	r30, r24
     362:	27 e0       	ldi	r18, 0x07	; 7
     364:	30 e0       	ldi	r19, 0x00	; 0
        sck_high;
        _delay_us(4);
        if ((PINB & (1 << PINB0))) {
            *target |= (1 << (7 - i));
        } else {
            *target &= ~(1 << (7 - i));
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	90 e0       	ldi	r25, 0x00	; 0
    UDR0 = serial_data;
}

void receive_bytes(uint8_t *target) {
    for (int i = 0; i < 8; i++) {
        sck_high;
     36a:	29 9a       	sbi	0x05, 1	; 5
     36c:	4a e0       	ldi	r20, 0x0A	; 10
     36e:	4a 95       	dec	r20
     370:	f1 f7       	brne	.-4      	; 0x36e <receive_bytes+0xe>
     372:	00 c0       	rjmp	.+0      	; 0x374 <receive_bytes+0x14>
     374:	60 81       	ld	r22, Z
        _delay_us(4);
        if ((PINB & (1 << PINB0))) {
            *target |= (1 << (7 - i));
     376:	ac 01       	movw	r20, r24
     378:	02 2e       	mov	r0, r18
     37a:	01 c0       	rjmp	.+2      	; 0x37e <receive_bytes+0x1e>
     37c:	44 0f       	add	r20, r20
     37e:	0a 94       	dec	r0
     380:	ea f7       	brpl	.-6      	; 0x37c <receive_bytes+0x1c>

void receive_bytes(uint8_t *target) {
    for (int i = 0; i < 8; i++) {
        sck_high;
        _delay_us(4);
        if ((PINB & (1 << PINB0))) {
     382:	18 9b       	sbis	0x03, 0	; 3
     384:	02 c0       	rjmp	.+4      	; 0x38a <receive_bytes+0x2a>
            *target |= (1 << (7 - i));
     386:	46 2b       	or	r20, r22
     388:	02 c0       	rjmp	.+4      	; 0x38e <receive_bytes+0x2e>
        } else {
            *target &= ~(1 << (7 - i));
     38a:	40 95       	com	r20
     38c:	46 23       	and	r20, r22
     38e:	40 83       	st	Z, r20
        }
        sck_low;
     390:	29 98       	cbi	0x05, 1	; 5
     392:	4a e0       	ldi	r20, 0x0A	; 10
     394:	4a 95       	dec	r20
     396:	f1 f7       	brne	.-4      	; 0x394 <receive_bytes+0x34>
     398:	00 c0       	rjmp	.+0      	; 0x39a <receive_bytes+0x3a>
     39a:	21 50       	subi	r18, 0x01	; 1
     39c:	31 09       	sbc	r19, r1
     39e:	28 f7       	brcc	.-54     	; 0x36a <receive_bytes+0xa>
        _delay_us(4);
    }
}
     3a0:	08 95       	ret

000003a2 <ack>:

void ack(void) {
    data_out;
     3a2:	83 e0       	ldi	r24, 0x03	; 3
     3a4:	84 b9       	out	0x04, r24	; 4
    data_low;
     3a6:	28 98       	cbi	0x05, 0	; 5
     3a8:	8a e0       	ldi	r24, 0x0A	; 10
     3aa:	8a 95       	dec	r24
     3ac:	f1 f7       	brne	.-4      	; 0x3aa <ack+0x8>
     3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <ack+0xe>
    _delay_us(4);
    sck_high;
     3b0:	29 9a       	sbi	0x05, 1	; 5
     3b2:	8a e0       	ldi	r24, 0x0A	; 10
     3b4:	8a 95       	dec	r24
     3b6:	f1 f7       	brne	.-4      	; 0x3b4 <ack+0x12>
     3b8:	00 c0       	rjmp	.+0      	; 0x3ba <ack+0x18>
    _delay_us(4);
    sck_low;
     3ba:	29 98       	cbi	0x05, 1	; 5
     3bc:	8a e0       	ldi	r24, 0x0A	; 10
     3be:	8a 95       	dec	r24
     3c0:	f1 f7       	brne	.-4      	; 0x3be <ack+0x1c>
     3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <ack+0x22>
    _delay_us(4);
    data_in;
     3c4:	8e ef       	ldi	r24, 0xFE	; 254
     3c6:	84 b9       	out	0x04, r24	; 4
    data_high;
     3c8:	28 9a       	sbi	0x05, 0	; 5
     3ca:	08 95       	ret

000003cc <read_data>:
    initialize_transmisson();
}



uint16_t read_data() {
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	00 d0       	rcall	.+0      	; 0x3d2 <read_data+0x6>
     3d2:	cd b7       	in	r28, 0x3d	; 61
     3d4:	de b7       	in	r29, 0x3e	; 62
    uint8_t data_l, data_h;
    uint16_t measured;
    data_l = 0x00;
     3d6:	1a 82       	std	Y+2, r1	; 0x02
    data_h = 0x00;
     3d8:	19 82       	std	Y+1, r1	; 0x01
    data_in;
     3da:	8e ef       	ldi	r24, 0xFE	; 254
     3dc:	84 b9       	out	0x04, r24	; 4
    data_high;
     3de:	28 9a       	sbi	0x05, 0	; 5
    
    while (PINB & (1<<DATA));
     3e0:	18 99       	sbic	0x03, 0	; 3
     3e2:	fe cf       	rjmp	.-4      	; 0x3e0 <read_data+0x14>
    //Start receiving MSB
    receive_bytes(&data_h);
     3e4:	ce 01       	movw	r24, r28
     3e6:	01 96       	adiw	r24, 0x01	; 1
     3e8:	0e 94 b0 01 	call	0x360	; 0x360 <receive_bytes>
    ack(); // ack() to start getting LSB
     3ec:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <ack>
    //Start receiving LSB
    receive_bytes(&data_l);
     3f0:	ce 01       	movw	r24, r28
     3f2:	02 96       	adiw	r24, 0x02	; 2
     3f4:	0e 94 b0 01 	call	0x360	; 0x360 <receive_bytes>
    
    measured = (data_h << 8) | data_l;
     3f8:	89 81       	ldd	r24, Y+1	; 0x01
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	98 2f       	mov	r25, r24
     3fe:	88 27       	eor	r24, r24
     400:	2a 81       	ldd	r18, Y+2	; 0x02
    return measured;
}
     402:	82 2b       	or	r24, r18
     404:	0f 90       	pop	r0
     406:	0f 90       	pop	r0
     408:	df 91       	pop	r29
     40a:	cf 91       	pop	r28
     40c:	08 95       	ret

0000040e <sht_sense>:
    }
    
    return 1;
}

sht_data sht_sense() {
     40e:	4f 92       	push	r4
     410:	5f 92       	push	r5
     412:	6f 92       	push	r6
     414:	7f 92       	push	r7
     416:	8f 92       	push	r8
     418:	9f 92       	push	r9
     41a:	af 92       	push	r10
     41c:	bf 92       	push	r11
     41e:	cf 92       	push	r12
     420:	df 92       	push	r13
     422:	ef 92       	push	r14
     424:	ff 92       	push	r15
     426:	1f 93       	push	r17
     428:	cf 93       	push	r28
     42a:	df 93       	push	r29
     42c:	00 d0       	rcall	.+0      	; 0x42e <sht_sense+0x20>
     42e:	00 d0       	rcall	.+0      	; 0x430 <sht_sense+0x22>
     430:	cd b7       	in	r28, 0x3d	; 61
     432:	de b7       	in	r29, 0x3e	; 62
    uint8_t _temperature, _humidity;
    uint16_t __humidity;
    sht_data data;
    initialize_transmisson();   // Initilize the sensor to send command
     434:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <initialize_transmisson>
    send_command(temperature);
     438:	83 e0       	ldi	r24, 0x03	; 3
     43a:	0e 94 05 01 	call	0x20a	; 0x20a <send_command>
     43e:	25 ed       	ldi	r18, 0xD5	; 213
     440:	2a 95       	dec	r18
     442:	f1 f7       	brne	.-4      	; 0x440 <sht_sense+0x32>
     444:	00 00       	nop
    _delay_us(80);              // Wait for measurement to complete
    _temperature = calculate_measured_data(read_data(), temperature);
     446:	0e 94 e6 01 	call	0x3cc	; 0x3cc <read_data>
        case humidity:
            _humidity = measured_data * 0.0405 - 2.8 * pow(10, -6) * pow(measured_data, 2) - 4;
            return _humidity;
            break;
        case temperature:
            _temperature = -40.00 + 0.01 * measured_data;
     44a:	bc 01       	movw	r22, r24
     44c:	80 e0       	ldi	r24, 0x00	; 0
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	0e 94 05 07 	call	0xe0a	; 0xe0a <__floatunsisf>
     454:	2a e0       	ldi	r18, 0x0A	; 10
     456:	37 ed       	ldi	r19, 0xD7	; 215
     458:	43 e2       	ldi	r20, 0x23	; 35
     45a:	5c e3       	ldi	r21, 0x3C	; 60
     45c:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	40 e2       	ldi	r20, 0x20	; 32
     466:	52 e4       	ldi	r21, 0x42	; 66
     468:	0e 94 74 06 	call	0xce8	; 0xce8 <__subsf3>
    uint16_t __humidity;
    sht_data data;
    initialize_transmisson();   // Initilize the sensor to send command
    send_command(temperature);
    _delay_us(80);              // Wait for measurement to complete
    _temperature = calculate_measured_data(read_data(), temperature);
     46c:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <__fixunssfsi>
     470:	16 2f       	mov	r17, r22
    reset();
     472:	0e 94 41 01 	call	0x282	; 0x282 <reset>
    send_command(humidity);
     476:	85 e0       	ldi	r24, 0x05	; 5
     478:	0e 94 05 01 	call	0x20a	; 0x20a <send_command>
     47c:	35 ed       	ldi	r19, 0xD5	; 213
     47e:	3a 95       	dec	r19
     480:	f1 f7       	brne	.-4      	; 0x47e <sht_sense+0x70>
     482:	00 00       	nop
    _delay_us(80);
    __humidity = read_data();
     484:	0e 94 e6 01 	call	0x3cc	; 0x3cc <read_data>
float calculate_measured_data(uint16_t measured_data, uint8_t value) {
    float _humidity, _temperature;
    
    switch (value) {
        case humidity:
            _humidity = measured_data * 0.0405 - 2.8 * pow(10, -6) * pow(measured_data, 2) - 4;
     488:	bc 01       	movw	r22, r24
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	0e 94 05 07 	call	0xe0a	; 0xe0a <__floatunsisf>
     492:	6b 01       	movw	r12, r22
     494:	7c 01       	movw	r14, r24
    reset();
    send_command(humidity);
    _delay_us(80);
    __humidity = read_data();
    _humidity = calculate_measured_data(__humidity, humidity);
    _humidity = (_temperature - 25) * (0.01 + 0.00008 * __humidity) + _humidity;
     496:	61 2f       	mov	r22, r17
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	69 51       	subi	r22, 0x19	; 25
     49c:	71 09       	sbc	r23, r1
     49e:	88 27       	eor	r24, r24
     4a0:	77 fd       	sbrc	r23, 7
     4a2:	80 95       	com	r24
     4a4:	98 2f       	mov	r25, r24
     4a6:	0e 94 07 07 	call	0xe0e	; 0xe0e <__floatsisf>
     4aa:	4b 01       	movw	r8, r22
     4ac:	5c 01       	movw	r10, r24
     4ae:	2c ea       	ldi	r18, 0xAC	; 172
     4b0:	35 ec       	ldi	r19, 0xC5	; 197
     4b2:	47 ea       	ldi	r20, 0xA7	; 167
     4b4:	58 e3       	ldi	r21, 0x38	; 56
     4b6:	c7 01       	movw	r24, r14
     4b8:	b6 01       	movw	r22, r12
     4ba:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     4be:	2a e0       	ldi	r18, 0x0A	; 10
     4c0:	37 ed       	ldi	r19, 0xD7	; 215
     4c2:	43 e2       	ldi	r20, 0x23	; 35
     4c4:	5c e3       	ldi	r21, 0x3C	; 60
     4c6:	0e 94 75 06 	call	0xcea	; 0xcea <__addsf3>
     4ca:	9b 01       	movw	r18, r22
     4cc:	ac 01       	movw	r20, r24
     4ce:	c5 01       	movw	r24, r10
     4d0:	b4 01       	movw	r22, r8
     4d2:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     4d6:	4b 01       	movw	r8, r22
     4d8:	5c 01       	movw	r10, r24
float calculate_measured_data(uint16_t measured_data, uint8_t value) {
    float _humidity, _temperature;
    
    switch (value) {
        case humidity:
            _humidity = measured_data * 0.0405 - 2.8 * pow(10, -6) * pow(measured_data, 2) - 4;
     4da:	24 e5       	ldi	r18, 0x54	; 84
     4dc:	33 ee       	ldi	r19, 0xE3	; 227
     4de:	45 e2       	ldi	r20, 0x25	; 37
     4e0:	5d e3       	ldi	r21, 0x3D	; 61
     4e2:	c7 01       	movw	r24, r14
     4e4:	b6 01       	movw	r22, r12
     4e6:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     4ea:	2b 01       	movw	r4, r22
     4ec:	3c 01       	movw	r6, r24
     4ee:	a7 01       	movw	r20, r14
     4f0:	96 01       	movw	r18, r12
     4f2:	c7 01       	movw	r24, r14
     4f4:	b6 01       	movw	r22, r12
     4f6:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     4fa:	22 ea       	ldi	r18, 0xA2	; 162
     4fc:	37 ee       	ldi	r19, 0xE7	; 231
     4fe:	4b e3       	ldi	r20, 0x3B	; 59
     500:	56 e3       	ldi	r21, 0x36	; 54
     502:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3>
     506:	9b 01       	movw	r18, r22
     508:	ac 01       	movw	r20, r24
     50a:	c3 01       	movw	r24, r6
     50c:	b2 01       	movw	r22, r4
     50e:	0e 94 74 06 	call	0xce8	; 0xce8 <__subsf3>
     512:	20 e0       	ldi	r18, 0x00	; 0
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	40 e8       	ldi	r20, 0x80	; 128
     518:	50 e4       	ldi	r21, 0x40	; 64
     51a:	0e 94 74 06 	call	0xce8	; 0xce8 <__subsf3>
    _temperature = calculate_measured_data(read_data(), temperature);
    reset();
    send_command(humidity);
    _delay_us(80);
    __humidity = read_data();
    _humidity = calculate_measured_data(__humidity, humidity);
     51e:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <__fixunssfsi>
    _humidity = (_temperature - 25) * (0.01 + 0.00008 * __humidity) + _humidity;
     522:	70 e0       	ldi	r23, 0x00	; 0
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	0e 94 07 07 	call	0xe0e	; 0xe0e <__floatsisf>
     52c:	9b 01       	movw	r18, r22
     52e:	ac 01       	movw	r20, r24
     530:	c5 01       	movw	r24, r10
     532:	b4 01       	movw	r22, r8
     534:	0e 94 75 06 	call	0xcea	; 0xcea <__addsf3>
    reset();
     538:	69 83       	std	Y+1, r22	; 0x01
     53a:	7a 83       	std	Y+2, r23	; 0x02
     53c:	8b 83       	std	Y+3, r24	; 0x03
     53e:	9c 83       	std	Y+4, r25	; 0x04
     540:	0e 94 41 01 	call	0x282	; 0x282 <reset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     544:	4f ef       	ldi	r20, 0xFF	; 255
     546:	e0 e7       	ldi	r30, 0x70	; 112
     548:	f2 e0       	ldi	r31, 0x02	; 2
     54a:	41 50       	subi	r20, 0x01	; 1
     54c:	e0 40       	sbci	r30, 0x00	; 0
     54e:	f0 40       	sbci	r31, 0x00	; 0
     550:	e1 f7       	brne	.-8      	; 0x54a <sht_sense+0x13c>
     552:	00 c0       	rjmp	.+0      	; 0x554 <sht_sense+0x146>
     554:	00 00       	nop
    reset();
    send_command(humidity);
    _delay_us(80);
    __humidity = read_data();
    _humidity = calculate_measured_data(__humidity, humidity);
    _humidity = (_temperature - 25) * (0.01 + 0.00008 * __humidity) + _humidity;
     556:	69 81       	ldd	r22, Y+1	; 0x01
     558:	7a 81       	ldd	r23, Y+2	; 0x02
     55a:	8b 81       	ldd	r24, Y+3	; 0x03
     55c:	9c 81       	ldd	r25, Y+4	; 0x04
     55e:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <__fixunssfsi>
     562:	96 2f       	mov	r25, r22
    reset();
    data._temperature = _temperature;
    data._humidity = _humidity;
    _delay_ms(100);
    return data;
}
     564:	81 2f       	mov	r24, r17
     566:	0f 90       	pop	r0
     568:	0f 90       	pop	r0
     56a:	0f 90       	pop	r0
     56c:	0f 90       	pop	r0
     56e:	df 91       	pop	r29
     570:	cf 91       	pop	r28
     572:	1f 91       	pop	r17
     574:	ff 90       	pop	r15
     576:	ef 90       	pop	r14
     578:	df 90       	pop	r13
     57a:	cf 90       	pop	r12
     57c:	bf 90       	pop	r11
     57e:	af 90       	pop	r10
     580:	9f 90       	pop	r9
     582:	8f 90       	pop	r8
     584:	7f 90       	pop	r7
     586:	6f 90       	pop	r6
     588:	5f 90       	pop	r5
     58a:	4f 90       	pop	r4
     58c:	08 95       	ret

0000058e <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     58e:	8d e1       	ldi	r24, 0x1D	; 29
     590:	8a 95       	dec	r24
     592:	f1 f7       	brne	.-4      	; 0x590 <main+0x2>
     594:	00 00       	nop
#include "sht/sht.c"


int main(void) {
    _delay_us(11);                  // Wait for sensor initialization
    serial_init();
     596:	0e 94 a6 01 	call	0x34c	; 0x34c <serial_init>
    stdout = &uart_output; // Assign output
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	91 e0       	ldi	r25, 0x01	; 1
     59e:	90 93 2f 01 	sts	0x012F, r25
     5a2:	80 93 2e 01 	sts	0x012E, r24
    while (1) {
        sht_data data;
        data = sht_sense();
        printf("Humidity: %.2f, Temp: %.2f \n",
     5a6:	ce e0       	ldi	r28, 0x0E	; 14
     5a8:	d1 e0       	ldi	r29, 0x01	; 1
    _delay_us(11);                  // Wait for sensor initialization
    serial_init();
    stdout = &uart_output; // Assign output
    while (1) {
        sht_data data;
        data = sht_sense();
     5aa:	0e 94 07 02 	call	0x40e	; 0x40e <sht_sense>
     5ae:	19 2f       	mov	r17, r25
        printf("Humidity: %.2f, Temp: %.2f \n",
     5b0:	68 2f       	mov	r22, r24
     5b2:	70 e0       	ldi	r23, 0x00	; 0
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	0e 94 05 07 	call	0xe0a	; 0xe0a <__floatunsisf>
     5bc:	9f 93       	push	r25
     5be:	8f 93       	push	r24
     5c0:	7f 93       	push	r23
     5c2:	6f 93       	push	r22
     5c4:	61 2f       	mov	r22, r17
     5c6:	70 e0       	ldi	r23, 0x00	; 0
     5c8:	80 e0       	ldi	r24, 0x00	; 0
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	0e 94 05 07 	call	0xe0a	; 0xe0a <__floatunsisf>
     5d0:	9f 93       	push	r25
     5d2:	8f 93       	push	r24
     5d4:	7f 93       	push	r23
     5d6:	6f 93       	push	r22
     5d8:	df 93       	push	r29
     5da:	cf 93       	push	r28
     5dc:	0e 94 4d 09 	call	0x129a	; 0x129a <printf>
     5e0:	8d b7       	in	r24, 0x3d	; 61
     5e2:	9e b7       	in	r25, 0x3e	; 62
     5e4:	0a 96       	adiw	r24, 0x0a	; 10
     5e6:	0f b6       	in	r0, 0x3f	; 63
     5e8:	f8 94       	cli
     5ea:	9e bf       	out	0x3e, r25	; 62
     5ec:	0f be       	out	0x3f, r0	; 63
     5ee:	8d bf       	out	0x3d, r24	; 61
     5f0:	dc cf       	rjmp	.-72     	; 0x5aa <main+0x1c>

000005f2 <vfprintf>:
     5f2:	a3 e1       	ldi	r26, 0x13	; 19
     5f4:	b0 e0       	ldi	r27, 0x00	; 0
     5f6:	ef ef       	ldi	r30, 0xFF	; 255
     5f8:	f2 e0       	ldi	r31, 0x02	; 2
     5fa:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__prologue_saves__>
     5fe:	7c 01       	movw	r14, r24
     600:	1b 01       	movw	r2, r22
     602:	6a 01       	movw	r12, r20
     604:	fc 01       	movw	r30, r24
     606:	17 82       	std	Z+7, r1	; 0x07
     608:	16 82       	std	Z+6, r1	; 0x06
     60a:	83 81       	ldd	r24, Z+3	; 0x03
     60c:	81 ff       	sbrs	r24, 1
     60e:	66 c3       	rjmp	.+1740   	; 0xcdc <__stack+0x3dd>
     610:	be 01       	movw	r22, r28
     612:	6f 5f       	subi	r22, 0xFF	; 255
     614:	7f 4f       	sbci	r23, 0xFF	; 255
     616:	4b 01       	movw	r8, r22
     618:	f7 01       	movw	r30, r14
     61a:	93 81       	ldd	r25, Z+3	; 0x03
     61c:	f1 01       	movw	r30, r2
     61e:	93 fd       	sbrc	r25, 3
     620:	85 91       	lpm	r24, Z+
     622:	93 ff       	sbrs	r25, 3
     624:	81 91       	ld	r24, Z+
     626:	1f 01       	movw	r2, r30
     628:	88 23       	and	r24, r24
     62a:	09 f4       	brne	.+2      	; 0x62e <vfprintf+0x3c>
     62c:	53 c3       	rjmp	.+1702   	; 0xcd4 <__stack+0x3d5>
     62e:	85 32       	cpi	r24, 0x25	; 37
     630:	39 f4       	brne	.+14     	; 0x640 <vfprintf+0x4e>
     632:	93 fd       	sbrc	r25, 3
     634:	85 91       	lpm	r24, Z+
     636:	93 ff       	sbrs	r25, 3
     638:	81 91       	ld	r24, Z+
     63a:	1f 01       	movw	r2, r30
     63c:	85 32       	cpi	r24, 0x25	; 37
     63e:	39 f4       	brne	.+14     	; 0x64e <vfprintf+0x5c>
     640:	b7 01       	movw	r22, r14
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     648:	56 01       	movw	r10, r12
     64a:	65 01       	movw	r12, r10
     64c:	e5 cf       	rjmp	.-54     	; 0x618 <vfprintf+0x26>
     64e:	10 e0       	ldi	r17, 0x00	; 0
     650:	51 2c       	mov	r5, r1
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	20 32       	cpi	r18, 0x20	; 32
     656:	a0 f4       	brcc	.+40     	; 0x680 <vfprintf+0x8e>
     658:	8b 32       	cpi	r24, 0x2B	; 43
     65a:	69 f0       	breq	.+26     	; 0x676 <vfprintf+0x84>
     65c:	30 f4       	brcc	.+12     	; 0x66a <vfprintf+0x78>
     65e:	80 32       	cpi	r24, 0x20	; 32
     660:	59 f0       	breq	.+22     	; 0x678 <vfprintf+0x86>
     662:	83 32       	cpi	r24, 0x23	; 35
     664:	69 f4       	brne	.+26     	; 0x680 <vfprintf+0x8e>
     666:	20 61       	ori	r18, 0x10	; 16
     668:	2c c0       	rjmp	.+88     	; 0x6c2 <vfprintf+0xd0>
     66a:	8d 32       	cpi	r24, 0x2D	; 45
     66c:	39 f0       	breq	.+14     	; 0x67c <vfprintf+0x8a>
     66e:	80 33       	cpi	r24, 0x30	; 48
     670:	39 f4       	brne	.+14     	; 0x680 <vfprintf+0x8e>
     672:	21 60       	ori	r18, 0x01	; 1
     674:	26 c0       	rjmp	.+76     	; 0x6c2 <vfprintf+0xd0>
     676:	22 60       	ori	r18, 0x02	; 2
     678:	24 60       	ori	r18, 0x04	; 4
     67a:	23 c0       	rjmp	.+70     	; 0x6c2 <vfprintf+0xd0>
     67c:	28 60       	ori	r18, 0x08	; 8
     67e:	21 c0       	rjmp	.+66     	; 0x6c2 <vfprintf+0xd0>
     680:	27 fd       	sbrc	r18, 7
     682:	27 c0       	rjmp	.+78     	; 0x6d2 <vfprintf+0xe0>
     684:	30 ed       	ldi	r19, 0xD0	; 208
     686:	38 0f       	add	r19, r24
     688:	3a 30       	cpi	r19, 0x0A	; 10
     68a:	78 f4       	brcc	.+30     	; 0x6aa <vfprintf+0xb8>
     68c:	26 ff       	sbrs	r18, 6
     68e:	06 c0       	rjmp	.+12     	; 0x69c <vfprintf+0xaa>
     690:	fa e0       	ldi	r31, 0x0A	; 10
     692:	1f 9f       	mul	r17, r31
     694:	30 0d       	add	r19, r0
     696:	11 24       	eor	r1, r1
     698:	13 2f       	mov	r17, r19
     69a:	13 c0       	rjmp	.+38     	; 0x6c2 <vfprintf+0xd0>
     69c:	6a e0       	ldi	r22, 0x0A	; 10
     69e:	56 9e       	mul	r5, r22
     6a0:	30 0d       	add	r19, r0
     6a2:	11 24       	eor	r1, r1
     6a4:	53 2e       	mov	r5, r19
     6a6:	20 62       	ori	r18, 0x20	; 32
     6a8:	0c c0       	rjmp	.+24     	; 0x6c2 <vfprintf+0xd0>
     6aa:	8e 32       	cpi	r24, 0x2E	; 46
     6ac:	21 f4       	brne	.+8      	; 0x6b6 <vfprintf+0xc4>
     6ae:	26 fd       	sbrc	r18, 6
     6b0:	11 c3       	rjmp	.+1570   	; 0xcd4 <__stack+0x3d5>
     6b2:	20 64       	ori	r18, 0x40	; 64
     6b4:	06 c0       	rjmp	.+12     	; 0x6c2 <vfprintf+0xd0>
     6b6:	8c 36       	cpi	r24, 0x6C	; 108
     6b8:	11 f4       	brne	.+4      	; 0x6be <vfprintf+0xcc>
     6ba:	20 68       	ori	r18, 0x80	; 128
     6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <vfprintf+0xd0>
     6be:	88 36       	cpi	r24, 0x68	; 104
     6c0:	41 f4       	brne	.+16     	; 0x6d2 <vfprintf+0xe0>
     6c2:	f1 01       	movw	r30, r2
     6c4:	93 fd       	sbrc	r25, 3
     6c6:	85 91       	lpm	r24, Z+
     6c8:	93 ff       	sbrs	r25, 3
     6ca:	81 91       	ld	r24, Z+
     6cc:	1f 01       	movw	r2, r30
     6ce:	81 11       	cpse	r24, r1
     6d0:	c1 cf       	rjmp	.-126    	; 0x654 <vfprintf+0x62>
     6d2:	9b eb       	ldi	r25, 0xBB	; 187
     6d4:	98 0f       	add	r25, r24
     6d6:	93 30       	cpi	r25, 0x03	; 3
     6d8:	18 f4       	brcc	.+6      	; 0x6e0 <vfprintf+0xee>
     6da:	20 61       	ori	r18, 0x10	; 16
     6dc:	80 5e       	subi	r24, 0xE0	; 224
     6de:	06 c0       	rjmp	.+12     	; 0x6ec <vfprintf+0xfa>
     6e0:	9b e9       	ldi	r25, 0x9B	; 155
     6e2:	98 0f       	add	r25, r24
     6e4:	93 30       	cpi	r25, 0x03	; 3
     6e6:	08 f0       	brcs	.+2      	; 0x6ea <vfprintf+0xf8>
     6e8:	aa c1       	rjmp	.+852    	; 0xa3e <__stack+0x13f>
     6ea:	2f 7e       	andi	r18, 0xEF	; 239
     6ec:	26 ff       	sbrs	r18, 6
     6ee:	16 e0       	ldi	r17, 0x06	; 6
     6f0:	2f 73       	andi	r18, 0x3F	; 63
     6f2:	72 2e       	mov	r7, r18
     6f4:	85 36       	cpi	r24, 0x65	; 101
     6f6:	21 f4       	brne	.+8      	; 0x700 <vfprintf+0x10e>
     6f8:	f2 2f       	mov	r31, r18
     6fa:	f0 64       	ori	r31, 0x40	; 64
     6fc:	7f 2e       	mov	r7, r31
     6fe:	08 c0       	rjmp	.+16     	; 0x710 <vfprintf+0x11e>
     700:	86 36       	cpi	r24, 0x66	; 102
     702:	21 f4       	brne	.+8      	; 0x70c <vfprintf+0x11a>
     704:	62 2f       	mov	r22, r18
     706:	60 68       	ori	r22, 0x80	; 128
     708:	76 2e       	mov	r7, r22
     70a:	02 c0       	rjmp	.+4      	; 0x710 <vfprintf+0x11e>
     70c:	11 11       	cpse	r17, r1
     70e:	11 50       	subi	r17, 0x01	; 1
     710:	77 fe       	sbrs	r7, 7
     712:	07 c0       	rjmp	.+14     	; 0x722 <vfprintf+0x130>
     714:	1c 33       	cpi	r17, 0x3C	; 60
     716:	48 f4       	brcc	.+18     	; 0x72a <vfprintf+0x138>
     718:	44 24       	eor	r4, r4
     71a:	43 94       	inc	r4
     71c:	41 0e       	add	r4, r17
     71e:	27 e0       	ldi	r18, 0x07	; 7
     720:	0b c0       	rjmp	.+22     	; 0x738 <vfprintf+0x146>
     722:	18 30       	cpi	r17, 0x08	; 8
     724:	30 f4       	brcc	.+12     	; 0x732 <vfprintf+0x140>
     726:	21 2f       	mov	r18, r17
     728:	06 c0       	rjmp	.+12     	; 0x736 <vfprintf+0x144>
     72a:	27 e0       	ldi	r18, 0x07	; 7
     72c:	4c e3       	ldi	r20, 0x3C	; 60
     72e:	44 2e       	mov	r4, r20
     730:	03 c0       	rjmp	.+6      	; 0x738 <vfprintf+0x146>
     732:	27 e0       	ldi	r18, 0x07	; 7
     734:	17 e0       	ldi	r17, 0x07	; 7
     736:	41 2c       	mov	r4, r1
     738:	56 01       	movw	r10, r12
     73a:	74 e0       	ldi	r23, 0x04	; 4
     73c:	a7 0e       	add	r10, r23
     73e:	b1 1c       	adc	r11, r1
     740:	f6 01       	movw	r30, r12
     742:	60 81       	ld	r22, Z
     744:	71 81       	ldd	r23, Z+1	; 0x01
     746:	82 81       	ldd	r24, Z+2	; 0x02
     748:	93 81       	ldd	r25, Z+3	; 0x03
     74a:	04 2d       	mov	r16, r4
     74c:	a4 01       	movw	r20, r8
     74e:	0e 94 2d 08 	call	0x105a	; 0x105a <__ftoa_engine>
     752:	6c 01       	movw	r12, r24
     754:	09 81       	ldd	r16, Y+1	; 0x01
     756:	00 ff       	sbrs	r16, 0
     758:	02 c0       	rjmp	.+4      	; 0x75e <vfprintf+0x16c>
     75a:	03 ff       	sbrs	r16, 3
     75c:	06 c0       	rjmp	.+12     	; 0x76a <vfprintf+0x178>
     75e:	71 fc       	sbrc	r7, 1
     760:	07 c0       	rjmp	.+14     	; 0x770 <vfprintf+0x17e>
     762:	72 fc       	sbrc	r7, 2
     764:	08 c0       	rjmp	.+16     	; 0x776 <vfprintf+0x184>
     766:	61 2c       	mov	r6, r1
     768:	08 c0       	rjmp	.+16     	; 0x77a <vfprintf+0x188>
     76a:	3d e2       	ldi	r19, 0x2D	; 45
     76c:	63 2e       	mov	r6, r19
     76e:	05 c0       	rjmp	.+10     	; 0x77a <vfprintf+0x188>
     770:	2b e2       	ldi	r18, 0x2B	; 43
     772:	62 2e       	mov	r6, r18
     774:	02 c0       	rjmp	.+4      	; 0x77a <vfprintf+0x188>
     776:	90 e2       	ldi	r25, 0x20	; 32
     778:	69 2e       	mov	r6, r25
     77a:	80 2f       	mov	r24, r16
     77c:	8c 70       	andi	r24, 0x0C	; 12
     77e:	99 f1       	breq	.+102    	; 0x7e6 <vfprintf+0x1f4>
     780:	66 20       	and	r6, r6
     782:	11 f0       	breq	.+4      	; 0x788 <vfprintf+0x196>
     784:	84 e0       	ldi	r24, 0x04	; 4
     786:	01 c0       	rjmp	.+2      	; 0x78a <vfprintf+0x198>
     788:	83 e0       	ldi	r24, 0x03	; 3
     78a:	85 15       	cp	r24, r5
     78c:	10 f0       	brcs	.+4      	; 0x792 <vfprintf+0x1a0>
     78e:	51 2c       	mov	r5, r1
     790:	0b c0       	rjmp	.+22     	; 0x7a8 <vfprintf+0x1b6>
     792:	58 1a       	sub	r5, r24
     794:	73 fc       	sbrc	r7, 3
     796:	08 c0       	rjmp	.+16     	; 0x7a8 <vfprintf+0x1b6>
     798:	b7 01       	movw	r22, r14
     79a:	80 e2       	ldi	r24, 0x20	; 32
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     7a2:	5a 94       	dec	r5
     7a4:	c9 f7       	brne	.-14     	; 0x798 <vfprintf+0x1a6>
     7a6:	f3 cf       	rjmp	.-26     	; 0x78e <vfprintf+0x19c>
     7a8:	66 20       	and	r6, r6
     7aa:	29 f0       	breq	.+10     	; 0x7b6 <vfprintf+0x1c4>
     7ac:	b7 01       	movw	r22, r14
     7ae:	86 2d       	mov	r24, r6
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     7b6:	03 fd       	sbrc	r16, 3
     7b8:	03 c0       	rjmp	.+6      	; 0x7c0 <vfprintf+0x1ce>
     7ba:	0c e6       	ldi	r16, 0x6C	; 108
     7bc:	10 e0       	ldi	r17, 0x00	; 0
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <vfprintf+0x1d2>
     7c0:	08 e6       	ldi	r16, 0x68	; 104
     7c2:	10 e0       	ldi	r17, 0x00	; 0
     7c4:	f7 2d       	mov	r31, r7
     7c6:	f0 71       	andi	r31, 0x10	; 16
     7c8:	7f 2e       	mov	r7, r31
     7ca:	f8 01       	movw	r30, r16
     7cc:	84 91       	lpm	r24, Z
     7ce:	88 23       	and	r24, r24
     7d0:	09 f4       	brne	.+2      	; 0x7d4 <vfprintf+0x1e2>
     7d2:	76 c2       	rjmp	.+1260   	; 0xcc0 <__stack+0x3c1>
     7d4:	71 10       	cpse	r7, r1
     7d6:	80 52       	subi	r24, 0x20	; 32
     7d8:	b7 01       	movw	r22, r14
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     7e0:	0f 5f       	subi	r16, 0xFF	; 255
     7e2:	1f 4f       	sbci	r17, 0xFF	; 255
     7e4:	f2 cf       	rjmp	.-28     	; 0x7ca <vfprintf+0x1d8>
     7e6:	77 fe       	sbrs	r7, 7
     7e8:	0f c0       	rjmp	.+30     	; 0x808 <vfprintf+0x216>
     7ea:	4c 0c       	add	r4, r12
     7ec:	04 ff       	sbrs	r16, 4
     7ee:	04 c0       	rjmp	.+8      	; 0x7f8 <vfprintf+0x206>
     7f0:	8a 81       	ldd	r24, Y+2	; 0x02
     7f2:	81 33       	cpi	r24, 0x31	; 49
     7f4:	09 f4       	brne	.+2      	; 0x7f8 <vfprintf+0x206>
     7f6:	4a 94       	dec	r4
     7f8:	14 14       	cp	r1, r4
     7fa:	74 f5       	brge	.+92     	; 0x858 <vfprintf+0x266>
     7fc:	f8 e0       	ldi	r31, 0x08	; 8
     7fe:	f4 15       	cp	r31, r4
     800:	78 f5       	brcc	.+94     	; 0x860 <vfprintf+0x26e>
     802:	88 e0       	ldi	r24, 0x08	; 8
     804:	48 2e       	mov	r4, r24
     806:	2c c0       	rjmp	.+88     	; 0x860 <vfprintf+0x26e>
     808:	76 fc       	sbrc	r7, 6
     80a:	2a c0       	rjmp	.+84     	; 0x860 <vfprintf+0x26e>
     80c:	81 2f       	mov	r24, r17
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	8c 15       	cp	r24, r12
     812:	9d 05       	cpc	r25, r13
     814:	9c f0       	brlt	.+38     	; 0x83c <vfprintf+0x24a>
     816:	6c ef       	ldi	r22, 0xFC	; 252
     818:	c6 16       	cp	r12, r22
     81a:	6f ef       	ldi	r22, 0xFF	; 255
     81c:	d6 06       	cpc	r13, r22
     81e:	74 f0       	brlt	.+28     	; 0x83c <vfprintf+0x24a>
     820:	77 2d       	mov	r23, r7
     822:	70 68       	ori	r23, 0x80	; 128
     824:	77 2e       	mov	r7, r23
     826:	0a c0       	rjmp	.+20     	; 0x83c <vfprintf+0x24a>
     828:	e2 e0       	ldi	r30, 0x02	; 2
     82a:	f0 e0       	ldi	r31, 0x00	; 0
     82c:	ec 0f       	add	r30, r28
     82e:	fd 1f       	adc	r31, r29
     830:	e1 0f       	add	r30, r17
     832:	f1 1d       	adc	r31, r1
     834:	80 81       	ld	r24, Z
     836:	80 33       	cpi	r24, 0x30	; 48
     838:	19 f4       	brne	.+6      	; 0x840 <vfprintf+0x24e>
     83a:	11 50       	subi	r17, 0x01	; 1
     83c:	11 11       	cpse	r17, r1
     83e:	f4 cf       	rjmp	.-24     	; 0x828 <vfprintf+0x236>
     840:	77 fe       	sbrs	r7, 7
     842:	0e c0       	rjmp	.+28     	; 0x860 <vfprintf+0x26e>
     844:	44 24       	eor	r4, r4
     846:	43 94       	inc	r4
     848:	41 0e       	add	r4, r17
     84a:	81 2f       	mov	r24, r17
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	c8 16       	cp	r12, r24
     850:	d9 06       	cpc	r13, r25
     852:	2c f4       	brge	.+10     	; 0x85e <vfprintf+0x26c>
     854:	1c 19       	sub	r17, r12
     856:	04 c0       	rjmp	.+8      	; 0x860 <vfprintf+0x26e>
     858:	44 24       	eor	r4, r4
     85a:	43 94       	inc	r4
     85c:	01 c0       	rjmp	.+2      	; 0x860 <vfprintf+0x26e>
     85e:	10 e0       	ldi	r17, 0x00	; 0
     860:	77 fe       	sbrs	r7, 7
     862:	07 c0       	rjmp	.+14     	; 0x872 <vfprintf+0x280>
     864:	1c 14       	cp	r1, r12
     866:	1d 04       	cpc	r1, r13
     868:	3c f4       	brge	.+14     	; 0x878 <vfprintf+0x286>
     86a:	96 01       	movw	r18, r12
     86c:	2f 5f       	subi	r18, 0xFF	; 255
     86e:	3f 4f       	sbci	r19, 0xFF	; 255
     870:	05 c0       	rjmp	.+10     	; 0x87c <vfprintf+0x28a>
     872:	25 e0       	ldi	r18, 0x05	; 5
     874:	30 e0       	ldi	r19, 0x00	; 0
     876:	02 c0       	rjmp	.+4      	; 0x87c <vfprintf+0x28a>
     878:	21 e0       	ldi	r18, 0x01	; 1
     87a:	30 e0       	ldi	r19, 0x00	; 0
     87c:	66 20       	and	r6, r6
     87e:	11 f0       	breq	.+4      	; 0x884 <vfprintf+0x292>
     880:	2f 5f       	subi	r18, 0xFF	; 255
     882:	3f 4f       	sbci	r19, 0xFF	; 255
     884:	11 23       	and	r17, r17
     886:	31 f0       	breq	.+12     	; 0x894 <vfprintf+0x2a2>
     888:	41 2f       	mov	r20, r17
     88a:	50 e0       	ldi	r21, 0x00	; 0
     88c:	4f 5f       	subi	r20, 0xFF	; 255
     88e:	5f 4f       	sbci	r21, 0xFF	; 255
     890:	24 0f       	add	r18, r20
     892:	35 1f       	adc	r19, r21
     894:	45 2d       	mov	r20, r5
     896:	50 e0       	ldi	r21, 0x00	; 0
     898:	24 17       	cp	r18, r20
     89a:	35 07       	cpc	r19, r21
     89c:	14 f4       	brge	.+4      	; 0x8a2 <vfprintf+0x2b0>
     89e:	52 1a       	sub	r5, r18
     8a0:	01 c0       	rjmp	.+2      	; 0x8a4 <vfprintf+0x2b2>
     8a2:	51 2c       	mov	r5, r1
     8a4:	87 2d       	mov	r24, r7
     8a6:	89 70       	andi	r24, 0x09	; 9
     8a8:	49 f4       	brne	.+18     	; 0x8bc <vfprintf+0x2ca>
     8aa:	55 20       	and	r5, r5
     8ac:	39 f0       	breq	.+14     	; 0x8bc <vfprintf+0x2ca>
     8ae:	b7 01       	movw	r22, r14
     8b0:	80 e2       	ldi	r24, 0x20	; 32
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     8b8:	5a 94       	dec	r5
     8ba:	f7 cf       	rjmp	.-18     	; 0x8aa <vfprintf+0x2b8>
     8bc:	66 20       	and	r6, r6
     8be:	29 f0       	breq	.+10     	; 0x8ca <vfprintf+0x2d8>
     8c0:	b7 01       	movw	r22, r14
     8c2:	86 2d       	mov	r24, r6
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     8ca:	73 fc       	sbrc	r7, 3
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <vfprintf+0x2ee>
     8ce:	55 20       	and	r5, r5
     8d0:	39 f0       	breq	.+14     	; 0x8e0 <vfprintf+0x2ee>
     8d2:	b7 01       	movw	r22, r14
     8d4:	80 e3       	ldi	r24, 0x30	; 48
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     8dc:	5a 94       	dec	r5
     8de:	f7 cf       	rjmp	.-18     	; 0x8ce <vfprintf+0x2dc>
     8e0:	77 fe       	sbrs	r7, 7
     8e2:	5f c0       	rjmp	.+190    	; 0x9a2 <__stack+0xa3>
     8e4:	9c 2d       	mov	r25, r12
     8e6:	8d 2d       	mov	r24, r13
     8e8:	d7 fe       	sbrs	r13, 7
     8ea:	02 c0       	rjmp	.+4      	; 0x8f0 <vfprintf+0x2fe>
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	69 2e       	mov	r6, r25
     8f2:	78 2e       	mov	r7, r24
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	c6 01       	movw	r24, r12
     8fa:	84 19       	sub	r24, r4
     8fc:	91 09       	sbc	r25, r1
     8fe:	9d 87       	std	Y+13, r25	; 0x0d
     900:	8c 87       	std	Y+12, r24	; 0x0c
     902:	96 01       	movw	r18, r12
     904:	26 19       	sub	r18, r6
     906:	37 09       	sbc	r19, r7
     908:	28 0d       	add	r18, r8
     90a:	39 1d       	adc	r19, r9
     90c:	81 2f       	mov	r24, r17
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	ee 27       	eor	r30, r30
     912:	ff 27       	eor	r31, r31
     914:	e8 1b       	sub	r30, r24
     916:	f9 0b       	sbc	r31, r25
     918:	ff 87       	std	Y+15, r31	; 0x0f
     91a:	ee 87       	std	Y+14, r30	; 0x0e
     91c:	ff ef       	ldi	r31, 0xFF	; 255
     91e:	6f 16       	cp	r6, r31
     920:	7f 06       	cpc	r7, r31
     922:	69 f4       	brne	.+26     	; 0x93e <__stack+0x3f>
     924:	b7 01       	movw	r22, r14
     926:	8e e2       	ldi	r24, 0x2E	; 46
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	2b 8b       	std	Y+19, r18	; 0x13
     92c:	3a 8b       	std	Y+18, r19	; 0x12
     92e:	48 8b       	std	Y+16, r20	; 0x10
     930:	59 8b       	std	Y+17, r21	; 0x11
     932:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     936:	59 89       	ldd	r21, Y+17	; 0x11
     938:	48 89       	ldd	r20, Y+16	; 0x10
     93a:	3a 89       	ldd	r19, Y+18	; 0x12
     93c:	2b 89       	ldd	r18, Y+19	; 0x13
     93e:	c6 14       	cp	r12, r6
     940:	d7 04       	cpc	r13, r7
     942:	54 f0       	brlt	.+20     	; 0x958 <__stack+0x59>
     944:	6c 85       	ldd	r22, Y+12	; 0x0c
     946:	7d 85       	ldd	r23, Y+13	; 0x0d
     948:	66 15       	cp	r22, r6
     94a:	77 05       	cpc	r23, r7
     94c:	2c f4       	brge	.+10     	; 0x958 <__stack+0x59>
     94e:	f9 01       	movw	r30, r18
     950:	e4 0f       	add	r30, r20
     952:	f5 1f       	adc	r31, r21
     954:	81 81       	ldd	r24, Z+1	; 0x01
     956:	01 c0       	rjmp	.+2      	; 0x95a <__stack+0x5b>
     958:	80 e3       	ldi	r24, 0x30	; 48
     95a:	71 e0       	ldi	r23, 0x01	; 1
     95c:	67 1a       	sub	r6, r23
     95e:	71 08       	sbc	r7, r1
     960:	4f 5f       	subi	r20, 0xFF	; 255
     962:	5f 4f       	sbci	r21, 0xFF	; 255
     964:	ee 85       	ldd	r30, Y+14	; 0x0e
     966:	ff 85       	ldd	r31, Y+15	; 0x0f
     968:	6e 16       	cp	r6, r30
     96a:	7f 06       	cpc	r7, r31
     96c:	6c f0       	brlt	.+26     	; 0x988 <__stack+0x89>
     96e:	b7 01       	movw	r22, r14
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	2b 8b       	std	Y+19, r18	; 0x13
     974:	3a 8b       	std	Y+18, r19	; 0x12
     976:	48 8b       	std	Y+16, r20	; 0x10
     978:	59 8b       	std	Y+17, r21	; 0x11
     97a:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     97e:	2b 89       	ldd	r18, Y+19	; 0x13
     980:	3a 89       	ldd	r19, Y+18	; 0x12
     982:	48 89       	ldd	r20, Y+16	; 0x10
     984:	59 89       	ldd	r21, Y+17	; 0x11
     986:	ca cf       	rjmp	.-108    	; 0x91c <__stack+0x1d>
     988:	6c 14       	cp	r6, r12
     98a:	7d 04       	cpc	r7, r13
     98c:	39 f4       	brne	.+14     	; 0x99c <__stack+0x9d>
     98e:	9a 81       	ldd	r25, Y+2	; 0x02
     990:	96 33       	cpi	r25, 0x36	; 54
     992:	18 f4       	brcc	.+6      	; 0x99a <__stack+0x9b>
     994:	95 33       	cpi	r25, 0x35	; 53
     996:	11 f4       	brne	.+4      	; 0x99c <__stack+0x9d>
     998:	04 ff       	sbrs	r16, 4
     99a:	81 e3       	ldi	r24, 0x31	; 49
     99c:	b7 01       	movw	r22, r14
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	4b c0       	rjmp	.+150    	; 0xa38 <__stack+0x139>
     9a2:	8a 81       	ldd	r24, Y+2	; 0x02
     9a4:	81 33       	cpi	r24, 0x31	; 49
     9a6:	09 f0       	breq	.+2      	; 0x9aa <__stack+0xab>
     9a8:	0f 7e       	andi	r16, 0xEF	; 239
     9aa:	b7 01       	movw	r22, r14
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     9b2:	11 11       	cpse	r17, r1
     9b4:	05 c0       	rjmp	.+10     	; 0x9c0 <__stack+0xc1>
     9b6:	74 fe       	sbrs	r7, 4
     9b8:	18 c0       	rjmp	.+48     	; 0x9ea <__stack+0xeb>
     9ba:	85 e4       	ldi	r24, 0x45	; 69
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	17 c0       	rjmp	.+46     	; 0x9ee <__stack+0xef>
     9c0:	b7 01       	movw	r22, r14
     9c2:	8e e2       	ldi	r24, 0x2E	; 46
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     9ca:	82 e0       	ldi	r24, 0x02	; 2
     9cc:	66 24       	eor	r6, r6
     9ce:	63 94       	inc	r6
     9d0:	68 0e       	add	r6, r24
     9d2:	f4 01       	movw	r30, r8
     9d4:	e8 0f       	add	r30, r24
     9d6:	f1 1d       	adc	r31, r1
     9d8:	80 81       	ld	r24, Z
     9da:	b7 01       	movw	r22, r14
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     9e2:	11 50       	subi	r17, 0x01	; 1
     9e4:	41 f3       	breq	.-48     	; 0x9b6 <__stack+0xb7>
     9e6:	86 2d       	mov	r24, r6
     9e8:	f1 cf       	rjmp	.-30     	; 0x9cc <__stack+0xcd>
     9ea:	85 e6       	ldi	r24, 0x65	; 101
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	b7 01       	movw	r22, r14
     9f0:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     9f4:	d7 fc       	sbrc	r13, 7
     9f6:	05 c0       	rjmp	.+10     	; 0xa02 <__stack+0x103>
     9f8:	c1 14       	cp	r12, r1
     9fa:	d1 04       	cpc	r13, r1
     9fc:	39 f4       	brne	.+14     	; 0xa0c <__stack+0x10d>
     9fe:	04 ff       	sbrs	r16, 4
     a00:	05 c0       	rjmp	.+10     	; 0xa0c <__stack+0x10d>
     a02:	d1 94       	neg	r13
     a04:	c1 94       	neg	r12
     a06:	d1 08       	sbc	r13, r1
     a08:	8d e2       	ldi	r24, 0x2D	; 45
     a0a:	01 c0       	rjmp	.+2      	; 0xa0e <__stack+0x10f>
     a0c:	8b e2       	ldi	r24, 0x2B	; 43
     a0e:	b7 01       	movw	r22, r14
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     a16:	80 e3       	ldi	r24, 0x30	; 48
     a18:	6a e0       	ldi	r22, 0x0A	; 10
     a1a:	c6 16       	cp	r12, r22
     a1c:	d1 04       	cpc	r13, r1
     a1e:	2c f0       	brlt	.+10     	; 0xa2a <__stack+0x12b>
     a20:	8f 5f       	subi	r24, 0xFF	; 255
     a22:	fa e0       	ldi	r31, 0x0A	; 10
     a24:	cf 1a       	sub	r12, r31
     a26:	d1 08       	sbc	r13, r1
     a28:	f7 cf       	rjmp	.-18     	; 0xa18 <__stack+0x119>
     a2a:	b7 01       	movw	r22, r14
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     a32:	b7 01       	movw	r22, r14
     a34:	c6 01       	movw	r24, r12
     a36:	c0 96       	adiw	r24, 0x30	; 48
     a38:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     a3c:	41 c1       	rjmp	.+642    	; 0xcc0 <__stack+0x3c1>
     a3e:	83 36       	cpi	r24, 0x63	; 99
     a40:	31 f0       	breq	.+12     	; 0xa4e <__stack+0x14f>
     a42:	83 37       	cpi	r24, 0x73	; 115
     a44:	79 f0       	breq	.+30     	; 0xa64 <__stack+0x165>
     a46:	83 35       	cpi	r24, 0x53	; 83
     a48:	09 f0       	breq	.+2      	; 0xa4c <__stack+0x14d>
     a4a:	58 c0       	rjmp	.+176    	; 0xafc <__stack+0x1fd>
     a4c:	21 c0       	rjmp	.+66     	; 0xa90 <__stack+0x191>
     a4e:	56 01       	movw	r10, r12
     a50:	72 e0       	ldi	r23, 0x02	; 2
     a52:	a7 0e       	add	r10, r23
     a54:	b1 1c       	adc	r11, r1
     a56:	f6 01       	movw	r30, r12
     a58:	80 81       	ld	r24, Z
     a5a:	89 83       	std	Y+1, r24	; 0x01
     a5c:	01 e0       	ldi	r16, 0x01	; 1
     a5e:	10 e0       	ldi	r17, 0x00	; 0
     a60:	64 01       	movw	r12, r8
     a62:	14 c0       	rjmp	.+40     	; 0xa8c <__stack+0x18d>
     a64:	56 01       	movw	r10, r12
     a66:	f2 e0       	ldi	r31, 0x02	; 2
     a68:	af 0e       	add	r10, r31
     a6a:	b1 1c       	adc	r11, r1
     a6c:	f6 01       	movw	r30, r12
     a6e:	c0 80       	ld	r12, Z
     a70:	d1 80       	ldd	r13, Z+1	; 0x01
     a72:	26 ff       	sbrs	r18, 6
     a74:	03 c0       	rjmp	.+6      	; 0xa7c <__stack+0x17d>
     a76:	61 2f       	mov	r22, r17
     a78:	70 e0       	ldi	r23, 0x00	; 0
     a7a:	02 c0       	rjmp	.+4      	; 0xa80 <__stack+0x181>
     a7c:	6f ef       	ldi	r22, 0xFF	; 255
     a7e:	7f ef       	ldi	r23, 0xFF	; 255
     a80:	c6 01       	movw	r24, r12
     a82:	2b 8b       	std	Y+19, r18	; 0x13
     a84:	0e 94 10 09 	call	0x1220	; 0x1220 <strnlen>
     a88:	8c 01       	movw	r16, r24
     a8a:	2b 89       	ldd	r18, Y+19	; 0x13
     a8c:	2f 77       	andi	r18, 0x7F	; 127
     a8e:	15 c0       	rjmp	.+42     	; 0xaba <__stack+0x1bb>
     a90:	56 01       	movw	r10, r12
     a92:	f2 e0       	ldi	r31, 0x02	; 2
     a94:	af 0e       	add	r10, r31
     a96:	b1 1c       	adc	r11, r1
     a98:	f6 01       	movw	r30, r12
     a9a:	c0 80       	ld	r12, Z
     a9c:	d1 80       	ldd	r13, Z+1	; 0x01
     a9e:	26 ff       	sbrs	r18, 6
     aa0:	03 c0       	rjmp	.+6      	; 0xaa8 <__stack+0x1a9>
     aa2:	61 2f       	mov	r22, r17
     aa4:	70 e0       	ldi	r23, 0x00	; 0
     aa6:	02 c0       	rjmp	.+4      	; 0xaac <__stack+0x1ad>
     aa8:	6f ef       	ldi	r22, 0xFF	; 255
     aaa:	7f ef       	ldi	r23, 0xFF	; 255
     aac:	c6 01       	movw	r24, r12
     aae:	2b 8b       	std	Y+19, r18	; 0x13
     ab0:	0e 94 05 09 	call	0x120a	; 0x120a <strnlen_P>
     ab4:	8c 01       	movw	r16, r24
     ab6:	2b 89       	ldd	r18, Y+19	; 0x13
     ab8:	20 68       	ori	r18, 0x80	; 128
     aba:	72 2e       	mov	r7, r18
     abc:	23 fd       	sbrc	r18, 3
     abe:	1a c0       	rjmp	.+52     	; 0xaf4 <__stack+0x1f5>
     ac0:	85 2d       	mov	r24, r5
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	08 17       	cp	r16, r24
     ac6:	19 07       	cpc	r17, r25
     ac8:	a8 f4       	brcc	.+42     	; 0xaf4 <__stack+0x1f5>
     aca:	b7 01       	movw	r22, r14
     acc:	80 e2       	ldi	r24, 0x20	; 32
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     ad4:	5a 94       	dec	r5
     ad6:	f4 cf       	rjmp	.-24     	; 0xac0 <__stack+0x1c1>
     ad8:	f6 01       	movw	r30, r12
     ada:	77 fc       	sbrc	r7, 7
     adc:	85 91       	lpm	r24, Z+
     ade:	77 fe       	sbrs	r7, 7
     ae0:	81 91       	ld	r24, Z+
     ae2:	6f 01       	movw	r12, r30
     ae4:	b7 01       	movw	r22, r14
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     aec:	51 10       	cpse	r5, r1
     aee:	5a 94       	dec	r5
     af0:	01 50       	subi	r16, 0x01	; 1
     af2:	11 09       	sbc	r17, r1
     af4:	01 15       	cp	r16, r1
     af6:	11 05       	cpc	r17, r1
     af8:	79 f7       	brne	.-34     	; 0xad8 <__stack+0x1d9>
     afa:	e2 c0       	rjmp	.+452    	; 0xcc0 <__stack+0x3c1>
     afc:	84 36       	cpi	r24, 0x64	; 100
     afe:	11 f0       	breq	.+4      	; 0xb04 <__stack+0x205>
     b00:	89 36       	cpi	r24, 0x69	; 105
     b02:	51 f5       	brne	.+84     	; 0xb58 <__stack+0x259>
     b04:	56 01       	movw	r10, r12
     b06:	27 ff       	sbrs	r18, 7
     b08:	09 c0       	rjmp	.+18     	; 0xb1c <__stack+0x21d>
     b0a:	f4 e0       	ldi	r31, 0x04	; 4
     b0c:	af 0e       	add	r10, r31
     b0e:	b1 1c       	adc	r11, r1
     b10:	f6 01       	movw	r30, r12
     b12:	60 81       	ld	r22, Z
     b14:	71 81       	ldd	r23, Z+1	; 0x01
     b16:	82 81       	ldd	r24, Z+2	; 0x02
     b18:	93 81       	ldd	r25, Z+3	; 0x03
     b1a:	0a c0       	rjmp	.+20     	; 0xb30 <__stack+0x231>
     b1c:	f2 e0       	ldi	r31, 0x02	; 2
     b1e:	af 0e       	add	r10, r31
     b20:	b1 1c       	adc	r11, r1
     b22:	f6 01       	movw	r30, r12
     b24:	60 81       	ld	r22, Z
     b26:	71 81       	ldd	r23, Z+1	; 0x01
     b28:	88 27       	eor	r24, r24
     b2a:	77 fd       	sbrc	r23, 7
     b2c:	80 95       	com	r24
     b2e:	98 2f       	mov	r25, r24
     b30:	02 2f       	mov	r16, r18
     b32:	0f 76       	andi	r16, 0x6F	; 111
     b34:	97 ff       	sbrs	r25, 7
     b36:	08 c0       	rjmp	.+16     	; 0xb48 <__stack+0x249>
     b38:	90 95       	com	r25
     b3a:	80 95       	com	r24
     b3c:	70 95       	com	r23
     b3e:	61 95       	neg	r22
     b40:	7f 4f       	sbci	r23, 0xFF	; 255
     b42:	8f 4f       	sbci	r24, 0xFF	; 255
     b44:	9f 4f       	sbci	r25, 0xFF	; 255
     b46:	00 68       	ori	r16, 0x80	; 128
     b48:	2a e0       	ldi	r18, 0x0A	; 10
     b4a:	30 e0       	ldi	r19, 0x00	; 0
     b4c:	a4 01       	movw	r20, r8
     b4e:	0e 94 61 09 	call	0x12c2	; 0x12c2 <__ultoa_invert>
     b52:	c8 2e       	mov	r12, r24
     b54:	c8 18       	sub	r12, r8
     b56:	3e c0       	rjmp	.+124    	; 0xbd4 <__stack+0x2d5>
     b58:	02 2f       	mov	r16, r18
     b5a:	85 37       	cpi	r24, 0x75	; 117
     b5c:	21 f4       	brne	.+8      	; 0xb66 <__stack+0x267>
     b5e:	0f 7e       	andi	r16, 0xEF	; 239
     b60:	2a e0       	ldi	r18, 0x0A	; 10
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	1d c0       	rjmp	.+58     	; 0xba0 <__stack+0x2a1>
     b66:	09 7f       	andi	r16, 0xF9	; 249
     b68:	8f 36       	cpi	r24, 0x6F	; 111
     b6a:	91 f0       	breq	.+36     	; 0xb90 <__stack+0x291>
     b6c:	18 f4       	brcc	.+6      	; 0xb74 <__stack+0x275>
     b6e:	88 35       	cpi	r24, 0x58	; 88
     b70:	59 f0       	breq	.+22     	; 0xb88 <__stack+0x289>
     b72:	b0 c0       	rjmp	.+352    	; 0xcd4 <__stack+0x3d5>
     b74:	80 37       	cpi	r24, 0x70	; 112
     b76:	19 f0       	breq	.+6      	; 0xb7e <__stack+0x27f>
     b78:	88 37       	cpi	r24, 0x78	; 120
     b7a:	11 f0       	breq	.+4      	; 0xb80 <__stack+0x281>
     b7c:	ab c0       	rjmp	.+342    	; 0xcd4 <__stack+0x3d5>
     b7e:	00 61       	ori	r16, 0x10	; 16
     b80:	04 ff       	sbrs	r16, 4
     b82:	09 c0       	rjmp	.+18     	; 0xb96 <__stack+0x297>
     b84:	04 60       	ori	r16, 0x04	; 4
     b86:	07 c0       	rjmp	.+14     	; 0xb96 <__stack+0x297>
     b88:	24 ff       	sbrs	r18, 4
     b8a:	08 c0       	rjmp	.+16     	; 0xb9c <__stack+0x29d>
     b8c:	06 60       	ori	r16, 0x06	; 6
     b8e:	06 c0       	rjmp	.+12     	; 0xb9c <__stack+0x29d>
     b90:	28 e0       	ldi	r18, 0x08	; 8
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	05 c0       	rjmp	.+10     	; 0xba0 <__stack+0x2a1>
     b96:	20 e1       	ldi	r18, 0x10	; 16
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	02 c0       	rjmp	.+4      	; 0xba0 <__stack+0x2a1>
     b9c:	20 e1       	ldi	r18, 0x10	; 16
     b9e:	32 e0       	ldi	r19, 0x02	; 2
     ba0:	56 01       	movw	r10, r12
     ba2:	07 ff       	sbrs	r16, 7
     ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <__stack+0x2b9>
     ba6:	f4 e0       	ldi	r31, 0x04	; 4
     ba8:	af 0e       	add	r10, r31
     baa:	b1 1c       	adc	r11, r1
     bac:	f6 01       	movw	r30, r12
     bae:	60 81       	ld	r22, Z
     bb0:	71 81       	ldd	r23, Z+1	; 0x01
     bb2:	82 81       	ldd	r24, Z+2	; 0x02
     bb4:	93 81       	ldd	r25, Z+3	; 0x03
     bb6:	08 c0       	rjmp	.+16     	; 0xbc8 <__stack+0x2c9>
     bb8:	f2 e0       	ldi	r31, 0x02	; 2
     bba:	af 0e       	add	r10, r31
     bbc:	b1 1c       	adc	r11, r1
     bbe:	f6 01       	movw	r30, r12
     bc0:	60 81       	ld	r22, Z
     bc2:	71 81       	ldd	r23, Z+1	; 0x01
     bc4:	80 e0       	ldi	r24, 0x00	; 0
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	a4 01       	movw	r20, r8
     bca:	0e 94 61 09 	call	0x12c2	; 0x12c2 <__ultoa_invert>
     bce:	c8 2e       	mov	r12, r24
     bd0:	c8 18       	sub	r12, r8
     bd2:	0f 77       	andi	r16, 0x7F	; 127
     bd4:	06 ff       	sbrs	r16, 6
     bd6:	0b c0       	rjmp	.+22     	; 0xbee <__stack+0x2ef>
     bd8:	20 2f       	mov	r18, r16
     bda:	2e 7f       	andi	r18, 0xFE	; 254
     bdc:	c1 16       	cp	r12, r17
     bde:	50 f4       	brcc	.+20     	; 0xbf4 <__stack+0x2f5>
     be0:	04 ff       	sbrs	r16, 4
     be2:	0a c0       	rjmp	.+20     	; 0xbf8 <__stack+0x2f9>
     be4:	02 fd       	sbrc	r16, 2
     be6:	08 c0       	rjmp	.+16     	; 0xbf8 <__stack+0x2f9>
     be8:	20 2f       	mov	r18, r16
     bea:	2e 7e       	andi	r18, 0xEE	; 238
     bec:	05 c0       	rjmp	.+10     	; 0xbf8 <__stack+0x2f9>
     bee:	dc 2c       	mov	r13, r12
     bf0:	20 2f       	mov	r18, r16
     bf2:	03 c0       	rjmp	.+6      	; 0xbfa <__stack+0x2fb>
     bf4:	dc 2c       	mov	r13, r12
     bf6:	01 c0       	rjmp	.+2      	; 0xbfa <__stack+0x2fb>
     bf8:	d1 2e       	mov	r13, r17
     bfa:	24 ff       	sbrs	r18, 4
     bfc:	0d c0       	rjmp	.+26     	; 0xc18 <__stack+0x319>
     bfe:	fe 01       	movw	r30, r28
     c00:	ec 0d       	add	r30, r12
     c02:	f1 1d       	adc	r31, r1
     c04:	80 81       	ld	r24, Z
     c06:	80 33       	cpi	r24, 0x30	; 48
     c08:	11 f4       	brne	.+4      	; 0xc0e <__stack+0x30f>
     c0a:	29 7e       	andi	r18, 0xE9	; 233
     c0c:	09 c0       	rjmp	.+18     	; 0xc20 <__stack+0x321>
     c0e:	22 ff       	sbrs	r18, 2
     c10:	06 c0       	rjmp	.+12     	; 0xc1e <__stack+0x31f>
     c12:	d3 94       	inc	r13
     c14:	d3 94       	inc	r13
     c16:	04 c0       	rjmp	.+8      	; 0xc20 <__stack+0x321>
     c18:	82 2f       	mov	r24, r18
     c1a:	86 78       	andi	r24, 0x86	; 134
     c1c:	09 f0       	breq	.+2      	; 0xc20 <__stack+0x321>
     c1e:	d3 94       	inc	r13
     c20:	23 fd       	sbrc	r18, 3
     c22:	13 c0       	rjmp	.+38     	; 0xc4a <__stack+0x34b>
     c24:	20 ff       	sbrs	r18, 0
     c26:	06 c0       	rjmp	.+12     	; 0xc34 <__stack+0x335>
     c28:	1c 2d       	mov	r17, r12
     c2a:	d5 14       	cp	r13, r5
     c2c:	18 f4       	brcc	.+6      	; 0xc34 <__stack+0x335>
     c2e:	15 0d       	add	r17, r5
     c30:	1d 19       	sub	r17, r13
     c32:	d5 2c       	mov	r13, r5
     c34:	d5 14       	cp	r13, r5
     c36:	68 f4       	brcc	.+26     	; 0xc52 <__stack+0x353>
     c38:	b7 01       	movw	r22, r14
     c3a:	80 e2       	ldi	r24, 0x20	; 32
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	2b 8b       	std	Y+19, r18	; 0x13
     c40:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     c44:	d3 94       	inc	r13
     c46:	2b 89       	ldd	r18, Y+19	; 0x13
     c48:	f5 cf       	rjmp	.-22     	; 0xc34 <__stack+0x335>
     c4a:	d5 14       	cp	r13, r5
     c4c:	10 f4       	brcc	.+4      	; 0xc52 <__stack+0x353>
     c4e:	5d 18       	sub	r5, r13
     c50:	01 c0       	rjmp	.+2      	; 0xc54 <__stack+0x355>
     c52:	51 2c       	mov	r5, r1
     c54:	24 ff       	sbrs	r18, 4
     c56:	12 c0       	rjmp	.+36     	; 0xc7c <__stack+0x37d>
     c58:	b7 01       	movw	r22, r14
     c5a:	80 e3       	ldi	r24, 0x30	; 48
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	2b 8b       	std	Y+19, r18	; 0x13
     c60:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     c64:	2b 89       	ldd	r18, Y+19	; 0x13
     c66:	22 ff       	sbrs	r18, 2
     c68:	17 c0       	rjmp	.+46     	; 0xc98 <__stack+0x399>
     c6a:	21 ff       	sbrs	r18, 1
     c6c:	03 c0       	rjmp	.+6      	; 0xc74 <__stack+0x375>
     c6e:	88 e5       	ldi	r24, 0x58	; 88
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	02 c0       	rjmp	.+4      	; 0xc78 <__stack+0x379>
     c74:	88 e7       	ldi	r24, 0x78	; 120
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	b7 01       	movw	r22, r14
     c7a:	0c c0       	rjmp	.+24     	; 0xc94 <__stack+0x395>
     c7c:	82 2f       	mov	r24, r18
     c7e:	86 78       	andi	r24, 0x86	; 134
     c80:	59 f0       	breq	.+22     	; 0xc98 <__stack+0x399>
     c82:	21 fd       	sbrc	r18, 1
     c84:	02 c0       	rjmp	.+4      	; 0xc8a <__stack+0x38b>
     c86:	80 e2       	ldi	r24, 0x20	; 32
     c88:	01 c0       	rjmp	.+2      	; 0xc8c <__stack+0x38d>
     c8a:	8b e2       	ldi	r24, 0x2B	; 43
     c8c:	27 fd       	sbrc	r18, 7
     c8e:	8d e2       	ldi	r24, 0x2D	; 45
     c90:	b7 01       	movw	r22, r14
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     c98:	c1 16       	cp	r12, r17
     c9a:	38 f4       	brcc	.+14     	; 0xcaa <__stack+0x3ab>
     c9c:	b7 01       	movw	r22, r14
     c9e:	80 e3       	ldi	r24, 0x30	; 48
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     ca6:	11 50       	subi	r17, 0x01	; 1
     ca8:	f7 cf       	rjmp	.-18     	; 0xc98 <__stack+0x399>
     caa:	ca 94       	dec	r12
     cac:	f4 01       	movw	r30, r8
     cae:	ec 0d       	add	r30, r12
     cb0:	f1 1d       	adc	r31, r1
     cb2:	80 81       	ld	r24, Z
     cb4:	b7 01       	movw	r22, r14
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     cbc:	c1 10       	cpse	r12, r1
     cbe:	f5 cf       	rjmp	.-22     	; 0xcaa <__stack+0x3ab>
     cc0:	55 20       	and	r5, r5
     cc2:	09 f4       	brne	.+2      	; 0xcc6 <__stack+0x3c7>
     cc4:	c2 cc       	rjmp	.-1660   	; 0x64a <vfprintf+0x58>
     cc6:	b7 01       	movw	r22, r14
     cc8:	80 e2       	ldi	r24, 0x20	; 32
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     cd0:	5a 94       	dec	r5
     cd2:	f6 cf       	rjmp	.-20     	; 0xcc0 <__stack+0x3c1>
     cd4:	f7 01       	movw	r30, r14
     cd6:	86 81       	ldd	r24, Z+6	; 0x06
     cd8:	97 81       	ldd	r25, Z+7	; 0x07
     cda:	02 c0       	rjmp	.+4      	; 0xce0 <__stack+0x3e1>
     cdc:	8f ef       	ldi	r24, 0xFF	; 255
     cde:	9f ef       	ldi	r25, 0xFF	; 255
     ce0:	63 96       	adiw	r28, 0x13	; 19
     ce2:	e2 e1       	ldi	r30, 0x12	; 18
     ce4:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__epilogue_restores__>

00000ce8 <__subsf3>:
     ce8:	50 58       	subi	r21, 0x80	; 128

00000cea <__addsf3>:
     cea:	bb 27       	eor	r27, r27
     cec:	aa 27       	eor	r26, r26
     cee:	0e d0       	rcall	.+28     	; 0xd0c <__addsf3x>
     cf0:	e0 c0       	rjmp	.+448    	; 0xeb2 <__fp_round>
     cf2:	d1 d0       	rcall	.+418    	; 0xe96 <__fp_pscA>
     cf4:	30 f0       	brcs	.+12     	; 0xd02 <__addsf3+0x18>
     cf6:	d6 d0       	rcall	.+428    	; 0xea4 <__fp_pscB>
     cf8:	20 f0       	brcs	.+8      	; 0xd02 <__addsf3+0x18>
     cfa:	31 f4       	brne	.+12     	; 0xd08 <__addsf3+0x1e>
     cfc:	9f 3f       	cpi	r25, 0xFF	; 255
     cfe:	11 f4       	brne	.+4      	; 0xd04 <__addsf3+0x1a>
     d00:	1e f4       	brtc	.+6      	; 0xd08 <__addsf3+0x1e>
     d02:	c6 c0       	rjmp	.+396    	; 0xe90 <__fp_nan>
     d04:	0e f4       	brtc	.+2      	; 0xd08 <__addsf3+0x1e>
     d06:	e0 95       	com	r30
     d08:	e7 fb       	bst	r30, 7
     d0a:	bc c0       	rjmp	.+376    	; 0xe84 <__fp_inf>

00000d0c <__addsf3x>:
     d0c:	e9 2f       	mov	r30, r25
     d0e:	e2 d0       	rcall	.+452    	; 0xed4 <__fp_split3>
     d10:	80 f3       	brcs	.-32     	; 0xcf2 <__addsf3+0x8>
     d12:	ba 17       	cp	r27, r26
     d14:	62 07       	cpc	r22, r18
     d16:	73 07       	cpc	r23, r19
     d18:	84 07       	cpc	r24, r20
     d1a:	95 07       	cpc	r25, r21
     d1c:	18 f0       	brcs	.+6      	; 0xd24 <__addsf3x+0x18>
     d1e:	71 f4       	brne	.+28     	; 0xd3c <__addsf3x+0x30>
     d20:	9e f5       	brtc	.+102    	; 0xd88 <__addsf3x+0x7c>
     d22:	fa c0       	rjmp	.+500    	; 0xf18 <__fp_zero>
     d24:	0e f4       	brtc	.+2      	; 0xd28 <__addsf3x+0x1c>
     d26:	e0 95       	com	r30
     d28:	0b 2e       	mov	r0, r27
     d2a:	ba 2f       	mov	r27, r26
     d2c:	a0 2d       	mov	r26, r0
     d2e:	0b 01       	movw	r0, r22
     d30:	b9 01       	movw	r22, r18
     d32:	90 01       	movw	r18, r0
     d34:	0c 01       	movw	r0, r24
     d36:	ca 01       	movw	r24, r20
     d38:	a0 01       	movw	r20, r0
     d3a:	11 24       	eor	r1, r1
     d3c:	ff 27       	eor	r31, r31
     d3e:	59 1b       	sub	r21, r25
     d40:	99 f0       	breq	.+38     	; 0xd68 <__addsf3x+0x5c>
     d42:	59 3f       	cpi	r21, 0xF9	; 249
     d44:	50 f4       	brcc	.+20     	; 0xd5a <__addsf3x+0x4e>
     d46:	50 3e       	cpi	r21, 0xE0	; 224
     d48:	68 f1       	brcs	.+90     	; 0xda4 <__addsf3x+0x98>
     d4a:	1a 16       	cp	r1, r26
     d4c:	f0 40       	sbci	r31, 0x00	; 0
     d4e:	a2 2f       	mov	r26, r18
     d50:	23 2f       	mov	r18, r19
     d52:	34 2f       	mov	r19, r20
     d54:	44 27       	eor	r20, r20
     d56:	58 5f       	subi	r21, 0xF8	; 248
     d58:	f3 cf       	rjmp	.-26     	; 0xd40 <__addsf3x+0x34>
     d5a:	46 95       	lsr	r20
     d5c:	37 95       	ror	r19
     d5e:	27 95       	ror	r18
     d60:	a7 95       	ror	r26
     d62:	f0 40       	sbci	r31, 0x00	; 0
     d64:	53 95       	inc	r21
     d66:	c9 f7       	brne	.-14     	; 0xd5a <__addsf3x+0x4e>
     d68:	7e f4       	brtc	.+30     	; 0xd88 <__addsf3x+0x7c>
     d6a:	1f 16       	cp	r1, r31
     d6c:	ba 0b       	sbc	r27, r26
     d6e:	62 0b       	sbc	r22, r18
     d70:	73 0b       	sbc	r23, r19
     d72:	84 0b       	sbc	r24, r20
     d74:	ba f0       	brmi	.+46     	; 0xda4 <__addsf3x+0x98>
     d76:	91 50       	subi	r25, 0x01	; 1
     d78:	a1 f0       	breq	.+40     	; 0xda2 <__addsf3x+0x96>
     d7a:	ff 0f       	add	r31, r31
     d7c:	bb 1f       	adc	r27, r27
     d7e:	66 1f       	adc	r22, r22
     d80:	77 1f       	adc	r23, r23
     d82:	88 1f       	adc	r24, r24
     d84:	c2 f7       	brpl	.-16     	; 0xd76 <__addsf3x+0x6a>
     d86:	0e c0       	rjmp	.+28     	; 0xda4 <__addsf3x+0x98>
     d88:	ba 0f       	add	r27, r26
     d8a:	62 1f       	adc	r22, r18
     d8c:	73 1f       	adc	r23, r19
     d8e:	84 1f       	adc	r24, r20
     d90:	48 f4       	brcc	.+18     	; 0xda4 <__addsf3x+0x98>
     d92:	87 95       	ror	r24
     d94:	77 95       	ror	r23
     d96:	67 95       	ror	r22
     d98:	b7 95       	ror	r27
     d9a:	f7 95       	ror	r31
     d9c:	9e 3f       	cpi	r25, 0xFE	; 254
     d9e:	08 f0       	brcs	.+2      	; 0xda2 <__addsf3x+0x96>
     da0:	b3 cf       	rjmp	.-154    	; 0xd08 <__addsf3+0x1e>
     da2:	93 95       	inc	r25
     da4:	88 0f       	add	r24, r24
     da6:	08 f0       	brcs	.+2      	; 0xdaa <__addsf3x+0x9e>
     da8:	99 27       	eor	r25, r25
     daa:	ee 0f       	add	r30, r30
     dac:	97 95       	ror	r25
     dae:	87 95       	ror	r24
     db0:	08 95       	ret

00000db2 <__fixunssfsi>:
     db2:	98 d0       	rcall	.+304    	; 0xee4 <__fp_splitA>
     db4:	88 f0       	brcs	.+34     	; 0xdd8 <__fixunssfsi+0x26>
     db6:	9f 57       	subi	r25, 0x7F	; 127
     db8:	90 f0       	brcs	.+36     	; 0xdde <__fixunssfsi+0x2c>
     dba:	b9 2f       	mov	r27, r25
     dbc:	99 27       	eor	r25, r25
     dbe:	b7 51       	subi	r27, 0x17	; 23
     dc0:	a0 f0       	brcs	.+40     	; 0xdea <__fixunssfsi+0x38>
     dc2:	d1 f0       	breq	.+52     	; 0xdf8 <__fixunssfsi+0x46>
     dc4:	66 0f       	add	r22, r22
     dc6:	77 1f       	adc	r23, r23
     dc8:	88 1f       	adc	r24, r24
     dca:	99 1f       	adc	r25, r25
     dcc:	1a f0       	brmi	.+6      	; 0xdd4 <__fixunssfsi+0x22>
     dce:	ba 95       	dec	r27
     dd0:	c9 f7       	brne	.-14     	; 0xdc4 <__fixunssfsi+0x12>
     dd2:	12 c0       	rjmp	.+36     	; 0xdf8 <__fixunssfsi+0x46>
     dd4:	b1 30       	cpi	r27, 0x01	; 1
     dd6:	81 f0       	breq	.+32     	; 0xdf8 <__fixunssfsi+0x46>
     dd8:	9f d0       	rcall	.+318    	; 0xf18 <__fp_zero>
     dda:	b1 e0       	ldi	r27, 0x01	; 1
     ddc:	08 95       	ret
     dde:	9c c0       	rjmp	.+312    	; 0xf18 <__fp_zero>
     de0:	67 2f       	mov	r22, r23
     de2:	78 2f       	mov	r23, r24
     de4:	88 27       	eor	r24, r24
     de6:	b8 5f       	subi	r27, 0xF8	; 248
     de8:	39 f0       	breq	.+14     	; 0xdf8 <__fixunssfsi+0x46>
     dea:	b9 3f       	cpi	r27, 0xF9	; 249
     dec:	cc f3       	brlt	.-14     	; 0xde0 <__fixunssfsi+0x2e>
     dee:	86 95       	lsr	r24
     df0:	77 95       	ror	r23
     df2:	67 95       	ror	r22
     df4:	b3 95       	inc	r27
     df6:	d9 f7       	brne	.-10     	; 0xdee <__fixunssfsi+0x3c>
     df8:	3e f4       	brtc	.+14     	; 0xe08 <__fixunssfsi+0x56>
     dfa:	90 95       	com	r25
     dfc:	80 95       	com	r24
     dfe:	70 95       	com	r23
     e00:	61 95       	neg	r22
     e02:	7f 4f       	sbci	r23, 0xFF	; 255
     e04:	8f 4f       	sbci	r24, 0xFF	; 255
     e06:	9f 4f       	sbci	r25, 0xFF	; 255
     e08:	08 95       	ret

00000e0a <__floatunsisf>:
     e0a:	e8 94       	clt
     e0c:	09 c0       	rjmp	.+18     	; 0xe20 <__floatsisf+0x12>

00000e0e <__floatsisf>:
     e0e:	97 fb       	bst	r25, 7
     e10:	3e f4       	brtc	.+14     	; 0xe20 <__floatsisf+0x12>
     e12:	90 95       	com	r25
     e14:	80 95       	com	r24
     e16:	70 95       	com	r23
     e18:	61 95       	neg	r22
     e1a:	7f 4f       	sbci	r23, 0xFF	; 255
     e1c:	8f 4f       	sbci	r24, 0xFF	; 255
     e1e:	9f 4f       	sbci	r25, 0xFF	; 255
     e20:	99 23       	and	r25, r25
     e22:	a9 f0       	breq	.+42     	; 0xe4e <__floatsisf+0x40>
     e24:	f9 2f       	mov	r31, r25
     e26:	96 e9       	ldi	r25, 0x96	; 150
     e28:	bb 27       	eor	r27, r27
     e2a:	93 95       	inc	r25
     e2c:	f6 95       	lsr	r31
     e2e:	87 95       	ror	r24
     e30:	77 95       	ror	r23
     e32:	67 95       	ror	r22
     e34:	b7 95       	ror	r27
     e36:	f1 11       	cpse	r31, r1
     e38:	f8 cf       	rjmp	.-16     	; 0xe2a <__floatsisf+0x1c>
     e3a:	fa f4       	brpl	.+62     	; 0xe7a <__floatsisf+0x6c>
     e3c:	bb 0f       	add	r27, r27
     e3e:	11 f4       	brne	.+4      	; 0xe44 <__floatsisf+0x36>
     e40:	60 ff       	sbrs	r22, 0
     e42:	1b c0       	rjmp	.+54     	; 0xe7a <__floatsisf+0x6c>
     e44:	6f 5f       	subi	r22, 0xFF	; 255
     e46:	7f 4f       	sbci	r23, 0xFF	; 255
     e48:	8f 4f       	sbci	r24, 0xFF	; 255
     e4a:	9f 4f       	sbci	r25, 0xFF	; 255
     e4c:	16 c0       	rjmp	.+44     	; 0xe7a <__floatsisf+0x6c>
     e4e:	88 23       	and	r24, r24
     e50:	11 f0       	breq	.+4      	; 0xe56 <__floatsisf+0x48>
     e52:	96 e9       	ldi	r25, 0x96	; 150
     e54:	11 c0       	rjmp	.+34     	; 0xe78 <__floatsisf+0x6a>
     e56:	77 23       	and	r23, r23
     e58:	21 f0       	breq	.+8      	; 0xe62 <__floatsisf+0x54>
     e5a:	9e e8       	ldi	r25, 0x8E	; 142
     e5c:	87 2f       	mov	r24, r23
     e5e:	76 2f       	mov	r23, r22
     e60:	05 c0       	rjmp	.+10     	; 0xe6c <__floatsisf+0x5e>
     e62:	66 23       	and	r22, r22
     e64:	71 f0       	breq	.+28     	; 0xe82 <__floatsisf+0x74>
     e66:	96 e8       	ldi	r25, 0x86	; 134
     e68:	86 2f       	mov	r24, r22
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	60 e0       	ldi	r22, 0x00	; 0
     e6e:	2a f0       	brmi	.+10     	; 0xe7a <__floatsisf+0x6c>
     e70:	9a 95       	dec	r25
     e72:	66 0f       	add	r22, r22
     e74:	77 1f       	adc	r23, r23
     e76:	88 1f       	adc	r24, r24
     e78:	da f7       	brpl	.-10     	; 0xe70 <__floatsisf+0x62>
     e7a:	88 0f       	add	r24, r24
     e7c:	96 95       	lsr	r25
     e7e:	87 95       	ror	r24
     e80:	97 f9       	bld	r25, 7
     e82:	08 95       	ret

00000e84 <__fp_inf>:
     e84:	97 f9       	bld	r25, 7
     e86:	9f 67       	ori	r25, 0x7F	; 127
     e88:	80 e8       	ldi	r24, 0x80	; 128
     e8a:	70 e0       	ldi	r23, 0x00	; 0
     e8c:	60 e0       	ldi	r22, 0x00	; 0
     e8e:	08 95       	ret

00000e90 <__fp_nan>:
     e90:	9f ef       	ldi	r25, 0xFF	; 255
     e92:	80 ec       	ldi	r24, 0xC0	; 192
     e94:	08 95       	ret

00000e96 <__fp_pscA>:
     e96:	00 24       	eor	r0, r0
     e98:	0a 94       	dec	r0
     e9a:	16 16       	cp	r1, r22
     e9c:	17 06       	cpc	r1, r23
     e9e:	18 06       	cpc	r1, r24
     ea0:	09 06       	cpc	r0, r25
     ea2:	08 95       	ret

00000ea4 <__fp_pscB>:
     ea4:	00 24       	eor	r0, r0
     ea6:	0a 94       	dec	r0
     ea8:	12 16       	cp	r1, r18
     eaa:	13 06       	cpc	r1, r19
     eac:	14 06       	cpc	r1, r20
     eae:	05 06       	cpc	r0, r21
     eb0:	08 95       	ret

00000eb2 <__fp_round>:
     eb2:	09 2e       	mov	r0, r25
     eb4:	03 94       	inc	r0
     eb6:	00 0c       	add	r0, r0
     eb8:	11 f4       	brne	.+4      	; 0xebe <__fp_round+0xc>
     eba:	88 23       	and	r24, r24
     ebc:	52 f0       	brmi	.+20     	; 0xed2 <__fp_round+0x20>
     ebe:	bb 0f       	add	r27, r27
     ec0:	40 f4       	brcc	.+16     	; 0xed2 <__fp_round+0x20>
     ec2:	bf 2b       	or	r27, r31
     ec4:	11 f4       	brne	.+4      	; 0xeca <__fp_round+0x18>
     ec6:	60 ff       	sbrs	r22, 0
     ec8:	04 c0       	rjmp	.+8      	; 0xed2 <__fp_round+0x20>
     eca:	6f 5f       	subi	r22, 0xFF	; 255
     ecc:	7f 4f       	sbci	r23, 0xFF	; 255
     ece:	8f 4f       	sbci	r24, 0xFF	; 255
     ed0:	9f 4f       	sbci	r25, 0xFF	; 255
     ed2:	08 95       	ret

00000ed4 <__fp_split3>:
     ed4:	57 fd       	sbrc	r21, 7
     ed6:	90 58       	subi	r25, 0x80	; 128
     ed8:	44 0f       	add	r20, r20
     eda:	55 1f       	adc	r21, r21
     edc:	59 f0       	breq	.+22     	; 0xef4 <__fp_splitA+0x10>
     ede:	5f 3f       	cpi	r21, 0xFF	; 255
     ee0:	71 f0       	breq	.+28     	; 0xefe <__fp_splitA+0x1a>
     ee2:	47 95       	ror	r20

00000ee4 <__fp_splitA>:
     ee4:	88 0f       	add	r24, r24
     ee6:	97 fb       	bst	r25, 7
     ee8:	99 1f       	adc	r25, r25
     eea:	61 f0       	breq	.+24     	; 0xf04 <__fp_splitA+0x20>
     eec:	9f 3f       	cpi	r25, 0xFF	; 255
     eee:	79 f0       	breq	.+30     	; 0xf0e <__fp_splitA+0x2a>
     ef0:	87 95       	ror	r24
     ef2:	08 95       	ret
     ef4:	12 16       	cp	r1, r18
     ef6:	13 06       	cpc	r1, r19
     ef8:	14 06       	cpc	r1, r20
     efa:	55 1f       	adc	r21, r21
     efc:	f2 cf       	rjmp	.-28     	; 0xee2 <__fp_split3+0xe>
     efe:	46 95       	lsr	r20
     f00:	f1 df       	rcall	.-30     	; 0xee4 <__fp_splitA>
     f02:	08 c0       	rjmp	.+16     	; 0xf14 <__fp_splitA+0x30>
     f04:	16 16       	cp	r1, r22
     f06:	17 06       	cpc	r1, r23
     f08:	18 06       	cpc	r1, r24
     f0a:	99 1f       	adc	r25, r25
     f0c:	f1 cf       	rjmp	.-30     	; 0xef0 <__fp_splitA+0xc>
     f0e:	86 95       	lsr	r24
     f10:	71 05       	cpc	r23, r1
     f12:	61 05       	cpc	r22, r1
     f14:	08 94       	sec
     f16:	08 95       	ret

00000f18 <__fp_zero>:
     f18:	e8 94       	clt

00000f1a <__fp_szero>:
     f1a:	bb 27       	eor	r27, r27
     f1c:	66 27       	eor	r22, r22
     f1e:	77 27       	eor	r23, r23
     f20:	cb 01       	movw	r24, r22
     f22:	97 f9       	bld	r25, 7
     f24:	08 95       	ret

00000f26 <__mulsf3>:
     f26:	0b d0       	rcall	.+22     	; 0xf3e <__mulsf3x>
     f28:	c4 cf       	rjmp	.-120    	; 0xeb2 <__fp_round>
     f2a:	b5 df       	rcall	.-150    	; 0xe96 <__fp_pscA>
     f2c:	28 f0       	brcs	.+10     	; 0xf38 <__mulsf3+0x12>
     f2e:	ba df       	rcall	.-140    	; 0xea4 <__fp_pscB>
     f30:	18 f0       	brcs	.+6      	; 0xf38 <__mulsf3+0x12>
     f32:	95 23       	and	r25, r21
     f34:	09 f0       	breq	.+2      	; 0xf38 <__mulsf3+0x12>
     f36:	a6 cf       	rjmp	.-180    	; 0xe84 <__fp_inf>
     f38:	ab cf       	rjmp	.-170    	; 0xe90 <__fp_nan>
     f3a:	11 24       	eor	r1, r1
     f3c:	ee cf       	rjmp	.-36     	; 0xf1a <__fp_szero>

00000f3e <__mulsf3x>:
     f3e:	ca df       	rcall	.-108    	; 0xed4 <__fp_split3>
     f40:	a0 f3       	brcs	.-24     	; 0xf2a <__mulsf3+0x4>

00000f42 <__mulsf3_pse>:
     f42:	95 9f       	mul	r25, r21
     f44:	d1 f3       	breq	.-12     	; 0xf3a <__mulsf3+0x14>
     f46:	95 0f       	add	r25, r21
     f48:	50 e0       	ldi	r21, 0x00	; 0
     f4a:	55 1f       	adc	r21, r21
     f4c:	62 9f       	mul	r22, r18
     f4e:	f0 01       	movw	r30, r0
     f50:	72 9f       	mul	r23, r18
     f52:	bb 27       	eor	r27, r27
     f54:	f0 0d       	add	r31, r0
     f56:	b1 1d       	adc	r27, r1
     f58:	63 9f       	mul	r22, r19
     f5a:	aa 27       	eor	r26, r26
     f5c:	f0 0d       	add	r31, r0
     f5e:	b1 1d       	adc	r27, r1
     f60:	aa 1f       	adc	r26, r26
     f62:	64 9f       	mul	r22, r20
     f64:	66 27       	eor	r22, r22
     f66:	b0 0d       	add	r27, r0
     f68:	a1 1d       	adc	r26, r1
     f6a:	66 1f       	adc	r22, r22
     f6c:	82 9f       	mul	r24, r18
     f6e:	22 27       	eor	r18, r18
     f70:	b0 0d       	add	r27, r0
     f72:	a1 1d       	adc	r26, r1
     f74:	62 1f       	adc	r22, r18
     f76:	73 9f       	mul	r23, r19
     f78:	b0 0d       	add	r27, r0
     f7a:	a1 1d       	adc	r26, r1
     f7c:	62 1f       	adc	r22, r18
     f7e:	83 9f       	mul	r24, r19
     f80:	a0 0d       	add	r26, r0
     f82:	61 1d       	adc	r22, r1
     f84:	22 1f       	adc	r18, r18
     f86:	74 9f       	mul	r23, r20
     f88:	33 27       	eor	r19, r19
     f8a:	a0 0d       	add	r26, r0
     f8c:	61 1d       	adc	r22, r1
     f8e:	23 1f       	adc	r18, r19
     f90:	84 9f       	mul	r24, r20
     f92:	60 0d       	add	r22, r0
     f94:	21 1d       	adc	r18, r1
     f96:	82 2f       	mov	r24, r18
     f98:	76 2f       	mov	r23, r22
     f9a:	6a 2f       	mov	r22, r26
     f9c:	11 24       	eor	r1, r1
     f9e:	9f 57       	subi	r25, 0x7F	; 127
     fa0:	50 40       	sbci	r21, 0x00	; 0
     fa2:	8a f0       	brmi	.+34     	; 0xfc6 <__mulsf3_pse+0x84>
     fa4:	e1 f0       	breq	.+56     	; 0xfde <__mulsf3_pse+0x9c>
     fa6:	88 23       	and	r24, r24
     fa8:	4a f0       	brmi	.+18     	; 0xfbc <__mulsf3_pse+0x7a>
     faa:	ee 0f       	add	r30, r30
     fac:	ff 1f       	adc	r31, r31
     fae:	bb 1f       	adc	r27, r27
     fb0:	66 1f       	adc	r22, r22
     fb2:	77 1f       	adc	r23, r23
     fb4:	88 1f       	adc	r24, r24
     fb6:	91 50       	subi	r25, 0x01	; 1
     fb8:	50 40       	sbci	r21, 0x00	; 0
     fba:	a9 f7       	brne	.-22     	; 0xfa6 <__mulsf3_pse+0x64>
     fbc:	9e 3f       	cpi	r25, 0xFE	; 254
     fbe:	51 05       	cpc	r21, r1
     fc0:	70 f0       	brcs	.+28     	; 0xfde <__mulsf3_pse+0x9c>
     fc2:	60 cf       	rjmp	.-320    	; 0xe84 <__fp_inf>
     fc4:	aa cf       	rjmp	.-172    	; 0xf1a <__fp_szero>
     fc6:	5f 3f       	cpi	r21, 0xFF	; 255
     fc8:	ec f3       	brlt	.-6      	; 0xfc4 <__mulsf3_pse+0x82>
     fca:	98 3e       	cpi	r25, 0xE8	; 232
     fcc:	dc f3       	brlt	.-10     	; 0xfc4 <__mulsf3_pse+0x82>
     fce:	86 95       	lsr	r24
     fd0:	77 95       	ror	r23
     fd2:	67 95       	ror	r22
     fd4:	b7 95       	ror	r27
     fd6:	f7 95       	ror	r31
     fd8:	e7 95       	ror	r30
     fda:	9f 5f       	subi	r25, 0xFF	; 255
     fdc:	c1 f7       	brne	.-16     	; 0xfce <__mulsf3_pse+0x8c>
     fde:	fe 2b       	or	r31, r30
     fe0:	88 0f       	add	r24, r24
     fe2:	91 1d       	adc	r25, r1
     fe4:	96 95       	lsr	r25
     fe6:	87 95       	ror	r24
     fe8:	97 f9       	bld	r25, 7
     fea:	08 95       	ret

00000fec <__prologue_saves__>:
     fec:	2f 92       	push	r2
     fee:	3f 92       	push	r3
     ff0:	4f 92       	push	r4
     ff2:	5f 92       	push	r5
     ff4:	6f 92       	push	r6
     ff6:	7f 92       	push	r7
     ff8:	8f 92       	push	r8
     ffa:	9f 92       	push	r9
     ffc:	af 92       	push	r10
     ffe:	bf 92       	push	r11
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	cd b7       	in	r28, 0x3d	; 61
    1012:	de b7       	in	r29, 0x3e	; 62
    1014:	ca 1b       	sub	r28, r26
    1016:	db 0b       	sbc	r29, r27
    1018:	0f b6       	in	r0, 0x3f	; 63
    101a:	f8 94       	cli
    101c:	de bf       	out	0x3e, r29	; 62
    101e:	0f be       	out	0x3f, r0	; 63
    1020:	cd bf       	out	0x3d, r28	; 61
    1022:	09 94       	ijmp

00001024 <__epilogue_restores__>:
    1024:	2a 88       	ldd	r2, Y+18	; 0x12
    1026:	39 88       	ldd	r3, Y+17	; 0x11
    1028:	48 88       	ldd	r4, Y+16	; 0x10
    102a:	5f 84       	ldd	r5, Y+15	; 0x0f
    102c:	6e 84       	ldd	r6, Y+14	; 0x0e
    102e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1030:	8c 84       	ldd	r8, Y+12	; 0x0c
    1032:	9b 84       	ldd	r9, Y+11	; 0x0b
    1034:	aa 84       	ldd	r10, Y+10	; 0x0a
    1036:	b9 84       	ldd	r11, Y+9	; 0x09
    1038:	c8 84       	ldd	r12, Y+8	; 0x08
    103a:	df 80       	ldd	r13, Y+7	; 0x07
    103c:	ee 80       	ldd	r14, Y+6	; 0x06
    103e:	fd 80       	ldd	r15, Y+5	; 0x05
    1040:	0c 81       	ldd	r16, Y+4	; 0x04
    1042:	1b 81       	ldd	r17, Y+3	; 0x03
    1044:	aa 81       	ldd	r26, Y+2	; 0x02
    1046:	b9 81       	ldd	r27, Y+1	; 0x01
    1048:	ce 0f       	add	r28, r30
    104a:	d1 1d       	adc	r29, r1
    104c:	0f b6       	in	r0, 0x3f	; 63
    104e:	f8 94       	cli
    1050:	de bf       	out	0x3e, r29	; 62
    1052:	0f be       	out	0x3f, r0	; 63
    1054:	cd bf       	out	0x3d, r28	; 61
    1056:	ed 01       	movw	r28, r26
    1058:	08 95       	ret

0000105a <__ftoa_engine>:
    105a:	28 30       	cpi	r18, 0x08	; 8
    105c:	08 f0       	brcs	.+2      	; 0x1060 <__ftoa_engine+0x6>
    105e:	27 e0       	ldi	r18, 0x07	; 7
    1060:	33 27       	eor	r19, r19
    1062:	da 01       	movw	r26, r20
    1064:	99 0f       	add	r25, r25
    1066:	31 1d       	adc	r19, r1
    1068:	87 fd       	sbrc	r24, 7
    106a:	91 60       	ori	r25, 0x01	; 1
    106c:	00 96       	adiw	r24, 0x00	; 0
    106e:	61 05       	cpc	r22, r1
    1070:	71 05       	cpc	r23, r1
    1072:	39 f4       	brne	.+14     	; 0x1082 <__ftoa_engine+0x28>
    1074:	32 60       	ori	r19, 0x02	; 2
    1076:	2e 5f       	subi	r18, 0xFE	; 254
    1078:	3d 93       	st	X+, r19
    107a:	30 e3       	ldi	r19, 0x30	; 48
    107c:	2a 95       	dec	r18
    107e:	e1 f7       	brne	.-8      	; 0x1078 <__ftoa_engine+0x1e>
    1080:	08 95       	ret
    1082:	9f 3f       	cpi	r25, 0xFF	; 255
    1084:	30 f0       	brcs	.+12     	; 0x1092 <__ftoa_engine+0x38>
    1086:	80 38       	cpi	r24, 0x80	; 128
    1088:	71 05       	cpc	r23, r1
    108a:	61 05       	cpc	r22, r1
    108c:	09 f0       	breq	.+2      	; 0x1090 <__ftoa_engine+0x36>
    108e:	3c 5f       	subi	r19, 0xFC	; 252
    1090:	3c 5f       	subi	r19, 0xFC	; 252
    1092:	3d 93       	st	X+, r19
    1094:	91 30       	cpi	r25, 0x01	; 1
    1096:	08 f0       	brcs	.+2      	; 0x109a <__ftoa_engine+0x40>
    1098:	80 68       	ori	r24, 0x80	; 128
    109a:	91 1d       	adc	r25, r1
    109c:	df 93       	push	r29
    109e:	cf 93       	push	r28
    10a0:	1f 93       	push	r17
    10a2:	0f 93       	push	r16
    10a4:	ff 92       	push	r15
    10a6:	ef 92       	push	r14
    10a8:	19 2f       	mov	r17, r25
    10aa:	98 7f       	andi	r25, 0xF8	; 248
    10ac:	96 95       	lsr	r25
    10ae:	e9 2f       	mov	r30, r25
    10b0:	96 95       	lsr	r25
    10b2:	96 95       	lsr	r25
    10b4:	e9 0f       	add	r30, r25
    10b6:	ff 27       	eor	r31, r31
    10b8:	e6 53       	subi	r30, 0x36	; 54
    10ba:	ff 4f       	sbci	r31, 0xFF	; 255
    10bc:	99 27       	eor	r25, r25
    10be:	33 27       	eor	r19, r19
    10c0:	ee 24       	eor	r14, r14
    10c2:	ff 24       	eor	r15, r15
    10c4:	a7 01       	movw	r20, r14
    10c6:	e7 01       	movw	r28, r14
    10c8:	05 90       	lpm	r0, Z+
    10ca:	08 94       	sec
    10cc:	07 94       	ror	r0
    10ce:	28 f4       	brcc	.+10     	; 0x10da <__ftoa_engine+0x80>
    10d0:	36 0f       	add	r19, r22
    10d2:	e7 1e       	adc	r14, r23
    10d4:	f8 1e       	adc	r15, r24
    10d6:	49 1f       	adc	r20, r25
    10d8:	51 1d       	adc	r21, r1
    10da:	66 0f       	add	r22, r22
    10dc:	77 1f       	adc	r23, r23
    10de:	88 1f       	adc	r24, r24
    10e0:	99 1f       	adc	r25, r25
    10e2:	06 94       	lsr	r0
    10e4:	a1 f7       	brne	.-24     	; 0x10ce <__ftoa_engine+0x74>
    10e6:	05 90       	lpm	r0, Z+
    10e8:	07 94       	ror	r0
    10ea:	28 f4       	brcc	.+10     	; 0x10f6 <__ftoa_engine+0x9c>
    10ec:	e7 0e       	add	r14, r23
    10ee:	f8 1e       	adc	r15, r24
    10f0:	49 1f       	adc	r20, r25
    10f2:	56 1f       	adc	r21, r22
    10f4:	c1 1d       	adc	r28, r1
    10f6:	77 0f       	add	r23, r23
    10f8:	88 1f       	adc	r24, r24
    10fa:	99 1f       	adc	r25, r25
    10fc:	66 1f       	adc	r22, r22
    10fe:	06 94       	lsr	r0
    1100:	a1 f7       	brne	.-24     	; 0x10ea <__ftoa_engine+0x90>
    1102:	05 90       	lpm	r0, Z+
    1104:	07 94       	ror	r0
    1106:	28 f4       	brcc	.+10     	; 0x1112 <__ftoa_engine+0xb8>
    1108:	f8 0e       	add	r15, r24
    110a:	49 1f       	adc	r20, r25
    110c:	56 1f       	adc	r21, r22
    110e:	c7 1f       	adc	r28, r23
    1110:	d1 1d       	adc	r29, r1
    1112:	88 0f       	add	r24, r24
    1114:	99 1f       	adc	r25, r25
    1116:	66 1f       	adc	r22, r22
    1118:	77 1f       	adc	r23, r23
    111a:	06 94       	lsr	r0
    111c:	a1 f7       	brne	.-24     	; 0x1106 <__ftoa_engine+0xac>
    111e:	05 90       	lpm	r0, Z+
    1120:	07 94       	ror	r0
    1122:	20 f4       	brcc	.+8      	; 0x112c <__ftoa_engine+0xd2>
    1124:	49 0f       	add	r20, r25
    1126:	56 1f       	adc	r21, r22
    1128:	c7 1f       	adc	r28, r23
    112a:	d8 1f       	adc	r29, r24
    112c:	99 0f       	add	r25, r25
    112e:	66 1f       	adc	r22, r22
    1130:	77 1f       	adc	r23, r23
    1132:	88 1f       	adc	r24, r24
    1134:	06 94       	lsr	r0
    1136:	a9 f7       	brne	.-22     	; 0x1122 <__ftoa_engine+0xc8>
    1138:	84 91       	lpm	r24, Z
    113a:	10 95       	com	r17
    113c:	17 70       	andi	r17, 0x07	; 7
    113e:	41 f0       	breq	.+16     	; 0x1150 <__ftoa_engine+0xf6>
    1140:	d6 95       	lsr	r29
    1142:	c7 95       	ror	r28
    1144:	57 95       	ror	r21
    1146:	47 95       	ror	r20
    1148:	f7 94       	ror	r15
    114a:	e7 94       	ror	r14
    114c:	1a 95       	dec	r17
    114e:	c1 f7       	brne	.-16     	; 0x1140 <__ftoa_engine+0xe6>
    1150:	e0 e7       	ldi	r30, 0x70	; 112
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	68 94       	set
    1156:	15 90       	lpm	r1, Z+
    1158:	15 91       	lpm	r17, Z+
    115a:	35 91       	lpm	r19, Z+
    115c:	65 91       	lpm	r22, Z+
    115e:	95 91       	lpm	r25, Z+
    1160:	05 90       	lpm	r0, Z+
    1162:	7f e2       	ldi	r23, 0x2F	; 47
    1164:	73 95       	inc	r23
    1166:	e1 18       	sub	r14, r1
    1168:	f1 0a       	sbc	r15, r17
    116a:	43 0b       	sbc	r20, r19
    116c:	56 0b       	sbc	r21, r22
    116e:	c9 0b       	sbc	r28, r25
    1170:	d0 09       	sbc	r29, r0
    1172:	c0 f7       	brcc	.-16     	; 0x1164 <__ftoa_engine+0x10a>
    1174:	e1 0c       	add	r14, r1
    1176:	f1 1e       	adc	r15, r17
    1178:	43 1f       	adc	r20, r19
    117a:	56 1f       	adc	r21, r22
    117c:	c9 1f       	adc	r28, r25
    117e:	d0 1d       	adc	r29, r0
    1180:	7e f4       	brtc	.+30     	; 0x11a0 <__ftoa_engine+0x146>
    1182:	70 33       	cpi	r23, 0x30	; 48
    1184:	11 f4       	brne	.+4      	; 0x118a <__ftoa_engine+0x130>
    1186:	8a 95       	dec	r24
    1188:	e6 cf       	rjmp	.-52     	; 0x1156 <__ftoa_engine+0xfc>
    118a:	e8 94       	clt
    118c:	01 50       	subi	r16, 0x01	; 1
    118e:	30 f0       	brcs	.+12     	; 0x119c <__ftoa_engine+0x142>
    1190:	08 0f       	add	r16, r24
    1192:	0a f4       	brpl	.+2      	; 0x1196 <__ftoa_engine+0x13c>
    1194:	00 27       	eor	r16, r16
    1196:	02 17       	cp	r16, r18
    1198:	08 f4       	brcc	.+2      	; 0x119c <__ftoa_engine+0x142>
    119a:	20 2f       	mov	r18, r16
    119c:	23 95       	inc	r18
    119e:	02 2f       	mov	r16, r18
    11a0:	7a 33       	cpi	r23, 0x3A	; 58
    11a2:	28 f0       	brcs	.+10     	; 0x11ae <__ftoa_engine+0x154>
    11a4:	79 e3       	ldi	r23, 0x39	; 57
    11a6:	7d 93       	st	X+, r23
    11a8:	2a 95       	dec	r18
    11aa:	e9 f7       	brne	.-6      	; 0x11a6 <__ftoa_engine+0x14c>
    11ac:	10 c0       	rjmp	.+32     	; 0x11ce <__ftoa_engine+0x174>
    11ae:	7d 93       	st	X+, r23
    11b0:	2a 95       	dec	r18
    11b2:	89 f6       	brne	.-94     	; 0x1156 <__ftoa_engine+0xfc>
    11b4:	06 94       	lsr	r0
    11b6:	97 95       	ror	r25
    11b8:	67 95       	ror	r22
    11ba:	37 95       	ror	r19
    11bc:	17 95       	ror	r17
    11be:	17 94       	ror	r1
    11c0:	e1 18       	sub	r14, r1
    11c2:	f1 0a       	sbc	r15, r17
    11c4:	43 0b       	sbc	r20, r19
    11c6:	56 0b       	sbc	r21, r22
    11c8:	c9 0b       	sbc	r28, r25
    11ca:	d0 09       	sbc	r29, r0
    11cc:	98 f0       	brcs	.+38     	; 0x11f4 <__ftoa_engine+0x19a>
    11ce:	23 95       	inc	r18
    11d0:	7e 91       	ld	r23, -X
    11d2:	73 95       	inc	r23
    11d4:	7a 33       	cpi	r23, 0x3A	; 58
    11d6:	08 f0       	brcs	.+2      	; 0x11da <__ftoa_engine+0x180>
    11d8:	70 e3       	ldi	r23, 0x30	; 48
    11da:	7c 93       	st	X, r23
    11dc:	20 13       	cpse	r18, r16
    11de:	b8 f7       	brcc	.-18     	; 0x11ce <__ftoa_engine+0x174>
    11e0:	7e 91       	ld	r23, -X
    11e2:	70 61       	ori	r23, 0x10	; 16
    11e4:	7d 93       	st	X+, r23
    11e6:	30 f0       	brcs	.+12     	; 0x11f4 <__ftoa_engine+0x19a>
    11e8:	83 95       	inc	r24
    11ea:	71 e3       	ldi	r23, 0x31	; 49
    11ec:	7d 93       	st	X+, r23
    11ee:	70 e3       	ldi	r23, 0x30	; 48
    11f0:	2a 95       	dec	r18
    11f2:	e1 f7       	brne	.-8      	; 0x11ec <__ftoa_engine+0x192>
    11f4:	11 24       	eor	r1, r1
    11f6:	ef 90       	pop	r14
    11f8:	ff 90       	pop	r15
    11fa:	0f 91       	pop	r16
    11fc:	1f 91       	pop	r17
    11fe:	cf 91       	pop	r28
    1200:	df 91       	pop	r29
    1202:	99 27       	eor	r25, r25
    1204:	87 fd       	sbrc	r24, 7
    1206:	90 95       	com	r25
    1208:	08 95       	ret

0000120a <strnlen_P>:
    120a:	fc 01       	movw	r30, r24
    120c:	05 90       	lpm	r0, Z+
    120e:	61 50       	subi	r22, 0x01	; 1
    1210:	70 40       	sbci	r23, 0x00	; 0
    1212:	01 10       	cpse	r0, r1
    1214:	d8 f7       	brcc	.-10     	; 0x120c <strnlen_P+0x2>
    1216:	80 95       	com	r24
    1218:	90 95       	com	r25
    121a:	8e 0f       	add	r24, r30
    121c:	9f 1f       	adc	r25, r31
    121e:	08 95       	ret

00001220 <strnlen>:
    1220:	fc 01       	movw	r30, r24
    1222:	61 50       	subi	r22, 0x01	; 1
    1224:	70 40       	sbci	r23, 0x00	; 0
    1226:	01 90       	ld	r0, Z+
    1228:	01 10       	cpse	r0, r1
    122a:	d8 f7       	brcc	.-10     	; 0x1222 <strnlen+0x2>
    122c:	80 95       	com	r24
    122e:	90 95       	com	r25
    1230:	8e 0f       	add	r24, r30
    1232:	9f 1f       	adc	r25, r31
    1234:	08 95       	ret

00001236 <fputc>:
    1236:	0f 93       	push	r16
    1238:	1f 93       	push	r17
    123a:	cf 93       	push	r28
    123c:	df 93       	push	r29
    123e:	18 2f       	mov	r17, r24
    1240:	09 2f       	mov	r16, r25
    1242:	eb 01       	movw	r28, r22
    1244:	8b 81       	ldd	r24, Y+3	; 0x03
    1246:	81 fd       	sbrc	r24, 1
    1248:	03 c0       	rjmp	.+6      	; 0x1250 <fputc+0x1a>
    124a:	8f ef       	ldi	r24, 0xFF	; 255
    124c:	9f ef       	ldi	r25, 0xFF	; 255
    124e:	20 c0       	rjmp	.+64     	; 0x1290 <fputc+0x5a>
    1250:	82 ff       	sbrs	r24, 2
    1252:	10 c0       	rjmp	.+32     	; 0x1274 <fputc+0x3e>
    1254:	4e 81       	ldd	r20, Y+6	; 0x06
    1256:	5f 81       	ldd	r21, Y+7	; 0x07
    1258:	2c 81       	ldd	r18, Y+4	; 0x04
    125a:	3d 81       	ldd	r19, Y+5	; 0x05
    125c:	42 17       	cp	r20, r18
    125e:	53 07       	cpc	r21, r19
    1260:	7c f4       	brge	.+30     	; 0x1280 <fputc+0x4a>
    1262:	e8 81       	ld	r30, Y
    1264:	f9 81       	ldd	r31, Y+1	; 0x01
    1266:	9f 01       	movw	r18, r30
    1268:	2f 5f       	subi	r18, 0xFF	; 255
    126a:	3f 4f       	sbci	r19, 0xFF	; 255
    126c:	39 83       	std	Y+1, r19	; 0x01
    126e:	28 83       	st	Y, r18
    1270:	10 83       	st	Z, r17
    1272:	06 c0       	rjmp	.+12     	; 0x1280 <fputc+0x4a>
    1274:	e8 85       	ldd	r30, Y+8	; 0x08
    1276:	f9 85       	ldd	r31, Y+9	; 0x09
    1278:	81 2f       	mov	r24, r17
    127a:	09 95       	icall
    127c:	89 2b       	or	r24, r25
    127e:	29 f7       	brne	.-54     	; 0x124a <fputc+0x14>
    1280:	2e 81       	ldd	r18, Y+6	; 0x06
    1282:	3f 81       	ldd	r19, Y+7	; 0x07
    1284:	2f 5f       	subi	r18, 0xFF	; 255
    1286:	3f 4f       	sbci	r19, 0xFF	; 255
    1288:	3f 83       	std	Y+7, r19	; 0x07
    128a:	2e 83       	std	Y+6, r18	; 0x06
    128c:	81 2f       	mov	r24, r17
    128e:	90 2f       	mov	r25, r16
    1290:	df 91       	pop	r29
    1292:	cf 91       	pop	r28
    1294:	1f 91       	pop	r17
    1296:	0f 91       	pop	r16
    1298:	08 95       	ret

0000129a <printf>:
    129a:	a0 e0       	ldi	r26, 0x00	; 0
    129c:	b0 e0       	ldi	r27, 0x00	; 0
    129e:	e3 e5       	ldi	r30, 0x53	; 83
    12a0:	f9 e0       	ldi	r31, 0x09	; 9
    12a2:	0c 94 06 08 	jmp	0x100c	; 0x100c <__prologue_saves__+0x20>
    12a6:	fe 01       	movw	r30, r28
    12a8:	35 96       	adiw	r30, 0x05	; 5
    12aa:	61 91       	ld	r22, Z+
    12ac:	71 91       	ld	r23, Z+
    12ae:	af 01       	movw	r20, r30
    12b0:	80 91 2e 01 	lds	r24, 0x012E
    12b4:	90 91 2f 01 	lds	r25, 0x012F
    12b8:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <vfprintf>
    12bc:	e2 e0       	ldi	r30, 0x02	; 2
    12be:	0c 94 22 08 	jmp	0x1044	; 0x1044 <__epilogue_restores__+0x20>

000012c2 <__ultoa_invert>:
    12c2:	fa 01       	movw	r30, r20
    12c4:	aa 27       	eor	r26, r26
    12c6:	28 30       	cpi	r18, 0x08	; 8
    12c8:	51 f1       	breq	.+84     	; 0x131e <__ultoa_invert+0x5c>
    12ca:	20 31       	cpi	r18, 0x10	; 16
    12cc:	81 f1       	breq	.+96     	; 0x132e <__ultoa_invert+0x6c>
    12ce:	e8 94       	clt
    12d0:	6f 93       	push	r22
    12d2:	6e 7f       	andi	r22, 0xFE	; 254
    12d4:	6e 5f       	subi	r22, 0xFE	; 254
    12d6:	7f 4f       	sbci	r23, 0xFF	; 255
    12d8:	8f 4f       	sbci	r24, 0xFF	; 255
    12da:	9f 4f       	sbci	r25, 0xFF	; 255
    12dc:	af 4f       	sbci	r26, 0xFF	; 255
    12de:	b1 e0       	ldi	r27, 0x01	; 1
    12e0:	3e d0       	rcall	.+124    	; 0x135e <__ultoa_invert+0x9c>
    12e2:	b4 e0       	ldi	r27, 0x04	; 4
    12e4:	3c d0       	rcall	.+120    	; 0x135e <__ultoa_invert+0x9c>
    12e6:	67 0f       	add	r22, r23
    12e8:	78 1f       	adc	r23, r24
    12ea:	89 1f       	adc	r24, r25
    12ec:	9a 1f       	adc	r25, r26
    12ee:	a1 1d       	adc	r26, r1
    12f0:	68 0f       	add	r22, r24
    12f2:	79 1f       	adc	r23, r25
    12f4:	8a 1f       	adc	r24, r26
    12f6:	91 1d       	adc	r25, r1
    12f8:	a1 1d       	adc	r26, r1
    12fa:	6a 0f       	add	r22, r26
    12fc:	71 1d       	adc	r23, r1
    12fe:	81 1d       	adc	r24, r1
    1300:	91 1d       	adc	r25, r1
    1302:	a1 1d       	adc	r26, r1
    1304:	20 d0       	rcall	.+64     	; 0x1346 <__ultoa_invert+0x84>
    1306:	09 f4       	brne	.+2      	; 0x130a <__ultoa_invert+0x48>
    1308:	68 94       	set
    130a:	3f 91       	pop	r19
    130c:	2a e0       	ldi	r18, 0x0A	; 10
    130e:	26 9f       	mul	r18, r22
    1310:	11 24       	eor	r1, r1
    1312:	30 19       	sub	r19, r0
    1314:	30 5d       	subi	r19, 0xD0	; 208
    1316:	31 93       	st	Z+, r19
    1318:	de f6       	brtc	.-74     	; 0x12d0 <__ultoa_invert+0xe>
    131a:	cf 01       	movw	r24, r30
    131c:	08 95       	ret
    131e:	46 2f       	mov	r20, r22
    1320:	47 70       	andi	r20, 0x07	; 7
    1322:	40 5d       	subi	r20, 0xD0	; 208
    1324:	41 93       	st	Z+, r20
    1326:	b3 e0       	ldi	r27, 0x03	; 3
    1328:	0f d0       	rcall	.+30     	; 0x1348 <__ultoa_invert+0x86>
    132a:	c9 f7       	brne	.-14     	; 0x131e <__ultoa_invert+0x5c>
    132c:	f6 cf       	rjmp	.-20     	; 0x131a <__ultoa_invert+0x58>
    132e:	46 2f       	mov	r20, r22
    1330:	4f 70       	andi	r20, 0x0F	; 15
    1332:	40 5d       	subi	r20, 0xD0	; 208
    1334:	4a 33       	cpi	r20, 0x3A	; 58
    1336:	18 f0       	brcs	.+6      	; 0x133e <__ultoa_invert+0x7c>
    1338:	49 5d       	subi	r20, 0xD9	; 217
    133a:	31 fd       	sbrc	r19, 1
    133c:	40 52       	subi	r20, 0x20	; 32
    133e:	41 93       	st	Z+, r20
    1340:	02 d0       	rcall	.+4      	; 0x1346 <__ultoa_invert+0x84>
    1342:	a9 f7       	brne	.-22     	; 0x132e <__ultoa_invert+0x6c>
    1344:	ea cf       	rjmp	.-44     	; 0x131a <__ultoa_invert+0x58>
    1346:	b4 e0       	ldi	r27, 0x04	; 4
    1348:	a6 95       	lsr	r26
    134a:	97 95       	ror	r25
    134c:	87 95       	ror	r24
    134e:	77 95       	ror	r23
    1350:	67 95       	ror	r22
    1352:	ba 95       	dec	r27
    1354:	c9 f7       	brne	.-14     	; 0x1348 <__ultoa_invert+0x86>
    1356:	00 97       	sbiw	r24, 0x00	; 0
    1358:	61 05       	cpc	r22, r1
    135a:	71 05       	cpc	r23, r1
    135c:	08 95       	ret
    135e:	9b 01       	movw	r18, r22
    1360:	ac 01       	movw	r20, r24
    1362:	0a 2e       	mov	r0, r26
    1364:	06 94       	lsr	r0
    1366:	57 95       	ror	r21
    1368:	47 95       	ror	r20
    136a:	37 95       	ror	r19
    136c:	27 95       	ror	r18
    136e:	ba 95       	dec	r27
    1370:	c9 f7       	brne	.-14     	; 0x1364 <__ultoa_invert+0xa2>
    1372:	62 0f       	add	r22, r18
    1374:	73 1f       	adc	r23, r19
    1376:	84 1f       	adc	r24, r20
    1378:	95 1f       	adc	r25, r21
    137a:	a0 1d       	adc	r26, r0
    137c:	08 95       	ret

0000137e <_exit>:
    137e:	f8 94       	cli

00001380 <__stop_program>:
    1380:	ff cf       	rjmp	.-2      	; 0x1380 <__stop_program>
